<?xml version='1.0' encoding='utf-8' ?>

<!-- build 9100.15.1106.2334                                -->
<workbook source-platform='win' version='9.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='nouns_5-decade_spanners' inline='true' name='textscan.42342.850570763891' version='9.1'>
      <connection class='textscan' directory='C:/Users/mjohns/Documents/GitHub/lyrics-lab/viz/data' filename='adjs_5-decade_spanners.csv' password='' server='' username=''>
        <relation name='adjs_5-decade_spanners#csv' table='[adjs_5-decade_spanners#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='5-decade' ordinal='0' />
            <column datatype='integer' name='count' ordinal='1' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>5-decade</remote-name>
            <remote-type>129</remote-type>
            <local-name>[5-decade]</local-name>
            <parent-name>[adjs_5-decade_spanners#csv]</parent-name>
            <remote-alias>5-decade</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[count]</local-name>
            <parent-name>[adjs_5-decade_spanners#csv]</parent-name>
            <remote-alias>count</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[adjs_5-decade_spanners#csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='5-Decade' datatype='string' name='[5-decade]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column-instance column='[5-decade]' derivation='None' name='[none:5-decade:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:5-decade:nk]' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;brighter&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;complete&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;double&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;feeling&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;great&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;insane&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;love&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;ohh&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;pure&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;sexy&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;straight&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;vain&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;young&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;able&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;cool&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;east&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;fine&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;greener&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;jealous&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;lovin&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;okay&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;quick&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;shiny&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;strong&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;virgin&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;ashamed&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;certain&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;cute&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;easy&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;hard&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;laughin&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;mad&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;oo&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;real&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;silly&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;sure&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;wont&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;bitter&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;cold&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;deeper&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;fat&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;heavy&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;hungry&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;long&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;natural&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;precious&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;scared&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;southern&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;tough&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;better&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;close&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;daytime&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;familiar&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;fresh&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;honest&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;live&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;miss&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;rough&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;small&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;tan&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;willing&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;beautiful&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;clear&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;dark&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;extra&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;free&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;higher&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;mean&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;open&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;right&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;sleepless&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;sweetest&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;wide&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;average&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;cheap&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;damn&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;electric&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;harder&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;lead&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;magical&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;perfect&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;red&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;simple&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;surprised&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;west&quot;</bucket>
            </map>
            <map to='#9c0824'>
              <bucket>&quot;work&quot;</bucket>
            </map>
            <map to='#9c0824'>
              <bucket>&quot;worth&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;bright&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;confused&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;early&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;final&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;green&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;jamaican&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;lovely&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;ohhh&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;purple&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;shady&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;strange&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;vicious&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;younger&quot;</bucket>
            </map>
            <map to='#9f0822'>
              <bucket>&quot;wish&quot;</bucket>
            </map>
            <map to='#a30921'>
              <bucket>&quot;wine&quot;</bucket>
            </map>
            <map to='#a40921'>
              <bucket>&quot;wet&quot;</bucket>
            </map>
            <map to='#a60a20'>
              <bucket>&quot;water&quot;</bucket>
            </map>
            <map to='#aa0a1f'>
              <bucket>&quot;type&quot;</bucket>
            </map>
            <map to='#ad0b1e'>
              <bucket>&quot;welcome&quot;</bucket>
            </map>
            <map to='#ae0b1d'>
              <bucket>&quot;trouble&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;afraid&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;broken&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;dumb&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;finer&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;grey&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;key&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;loving&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;ol&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;quiet&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;short&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;stronger&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;warm&quot;</bucket>
            </map>
            <map to='#b10c1c'>
              <bucket>&quot;trippin&quot;</bucket>
            </map>
            <map to='#b40d1b'>
              <bucket>&quot;team&quot;</bucket>
            </map>
            <map to='#b50e1b'>
              <bucket>&quot;wait&quot;</bucket>
            </map>
            <map to='#b70f1a'>
              <bucket>&quot;tattoo&quot;</bucket>
            </map>
            <map to='#ba1019'>
              <bucket>&quot;suit&quot;</bucket>
            </map>
            <map to='#bc1118'>
              <bucket>&quot;twisted&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;blind&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;come&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;dirty&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;feel&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;grand&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;inner&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;lost&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;new&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;private&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;secret&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;steady&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;ugly&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;wrong&quot;</bucket>
            </map>
            <map to='#bd1118'>
              <bucket>&quot;start&quot;</bucket>
            </map>
            <map to='#c01317'>
              <bucket>&quot;sound&quot;</bucket>
            </map>
            <map to='#c31417'>
              <bucket>&quot;rich&quot;</bucket>
            </map>
            <map to='#c31417'>
              <bucket>&quot;skirt&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;big&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;closed&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;dead&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;famous&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;funky&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;hot&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;living&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;outside&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;sacred&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;smart&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;tight&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;wise&quot;</bucket>
            </map>
            <map to='#c51417'>
              <bucket>&quot;sippin&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;best&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;clearer&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;darkest&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;fair&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;french&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;hollow&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;little&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;middle&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;rockin&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;slow&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;tall&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;wild&quot;</bucket>
            </map>
            <map to='#c71517'>
              <bucket>&quot;record&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;black&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;colder&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;different&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;favorite&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;good&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;hurt&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;loose&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;past&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;pretty&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;second&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;special&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;true&quot;</bucket>
            </map>
            <map to='#c81518'>
              <bucket>&quot;nervous&quot;</bucket>
            </map>
            <map to='#c91518'>
              <bucket>&quot;pound&quot;</bucket>
            </map>
            <map to='#cc1618'>
              <bucket>&quot;pop&quot;</bucket>
            </map>
            <map to='#ce1618'>
              <bucket>&quot;movin&quot;</bucket>
            </map>
            <map to='#ce1618'>
              <bucket>&quot;plan&quot;</bucket>
            </map>
            <map to='#d01b1b'>
              <bucket>&quot;phone&quot;</bucket>
            </map>
            <map to='#d1211e'>
              <bucket>&quot;ooh&quot;</bucket>
            </map>
            <map to='#d22320'>
              <bucket>&quot;light&quot;</bucket>
            </map>
            <map to='#d32722'>
              <bucket>&quot;mouth&quot;</bucket>
            </map>
            <map to='#d42d25'>
              <bucket>&quot;morning&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;bad&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;cherry&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;damned&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;endless&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;foreign&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;left&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;main&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;ooo&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;restless&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;single&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;sweet&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;worst&quot;</bucket>
            </map>
            <map to='#d63128'>
              <bucket>&quot;lean&quot;</bucket>
            </map>
            <map to='#d63328'>
              <bucket>&quot;memory&quot;</bucket>
            </map>
            <map to='#d8392c'>
              <bucket>&quot;livin&quot;</bucket>
            </map>
            <map to='#d93e30'>
              <bucket>&quot;kick&quot;</bucket>
            </map>
            <map to='#da3f31'>
              <bucket>&quot;hotter&quot;</bucket>
            </map>
            <map to='#db4334'>
              <bucket>&quot;jump&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;blue&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;common&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;divine&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;fly&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;gray&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;innocent&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;loud&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;nice&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;proud&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;separate&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;stormy&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;undercover&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;yellow&quot;</bucket>
            </map>
            <map to='#dd4839'>
              <bucket>&quot;ice&quot;</bucket>
            </map>
            <map to='#de4b3b'>
              <bucket>&quot;golden&quot;</bucket>
            </map>
            <map to='#df4d3d'>
              <bucket>&quot;high&quot;</bucket>
            </map>
            <map to='#e15341'>
              <bucket>&quot;hater&quot;</bucket>
            </map>
            <map to='#e35846'>
              <bucket>&quot;fresher&quot;</bucket>
            </map>
            <map to='#e35846'>
              <bucket>&quot;half&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;bigger&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;closer&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;dear&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;fancy&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;funny&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;human&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;local&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;naked&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;physical&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;soft&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;tiny&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;wonderful&quot;</bucket>
            </map>
            <map to='#e65d4c'>
              <bucket>&quot;gon&quot;</bucket>
            </map>
            <map to='#ea6352'>
              <bucket>&quot;flow&quot;</bucket>
            </map>
            <map to='#eac0bd'>
              <bucket>&quot;american&quot;</bucket>
            </map>
            <map to='#eb6555'>
              <bucket>&quot;fake&quot;</bucket>
            </map>
            <map to='#ecb9b5'>
              <bucket>&quot;bag&quot;</bucket>
            </map>
            <map to='#ed6858'>
              <bucket>&quot;feelin&quot;</bucket>
            </map>
            <map to='#eeb2ad'>
              <bucket>&quot;ball&quot;</bucket>
            </map>
            <map to='#efb0aa'>
              <bucket>&quot;animal&quot;</bucket>
            </map>
            <map to='#f06d5e'>
              <bucket>&quot;end&quot;</bucket>
            </map>
            <map to='#f1aca5'>
              <bucket>&quot;beauty&quot;</bucket>
            </map>
            <map to='#f37263'>
              <bucket>&quot;dry&quot;</bucket>
            </map>
            <map to='#f37364'>
              <bucket>&quot;drunk&quot;</bucket>
            </map>
            <map to='#f3a59d'>
              <bucket>&quot;beer&quot;</bucket>
            </map>
            <map to='#f5796a'>
              <bucket>&quot;dress&quot;</bucket>
            </map>
            <map to='#f57f71'>
              <bucket>&quot;crack&quot;</bucket>
            </map>
            <map to='#f58173'>
              <bucket>&quot;clean&quot;</bucket>
            </map>
            <map to='#f5a097'>
              <bucket>&quot;baddest&quot;</bucket>
            </map>
            <map to='#f68578'>
              <bucket>&quot;college&quot;</bucket>
            </map>
            <map to='#f68b7f'>
              <bucket>&quot;cloud&quot;</bucket>
            </map>
            <map to='#f69e95'>
              <bucket>&quot;brain&quot;</bucket>
            </map>
            <map to='#f79085'>
              <bucket>&quot;break&quot;</bucket>
            </map>
            <map to='#f79287'>
              <bucket>&quot;buzz&quot;</bucket>
            </map>
            <map to='#f7988e'>
              <bucket>&quot;building&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;biggest&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;closest&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;deep&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;fast&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;glad&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;humble&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;lonely&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;nasty&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;pink&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;safe&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;sorry&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;tired&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;alive&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;brown&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;crazy&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;flat&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;guilty&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;lame&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;low&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;old&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;rare&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;shy&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;sunny&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;weak&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;beat&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;corner&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;dancin&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;everyday&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;freaky&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;like&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;make&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;oooh&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;sad&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;sleeping&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;sweeter&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;white&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;answer&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;busy&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;cruel&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;foolish&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;happy&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;late&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;lucky&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;older&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;ready&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;sick&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;super&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;wee&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>5-Decade Spanning Adjectives</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run>All adjectives appearing in every decade from 1970.</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='nouns_5-decade_spanners' name='textscan.42342.850570763891' />
          </datasources>
          <datasource-dependencies datasource='textscan.42342.850570763891'>
            <column caption='5-Decade' datatype='string' name='[5-decade]' role='dimension' type='nominal' />
            <column datatype='integer' name='[count]' role='measure' type='quantitative' />
            <column-instance column='[5-decade]' derivation='None' name='[none:5-decade:nk]' pivot='key' type='nominal' />
            <column-instance column='[count]' derivation='Sum' name='[sum:count:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width-header' value='52' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[textscan.42342.850570763891].[sum:count:qk]' />
              <size column='[textscan.42342.850570763891].[sum:count:qk]' />
              <text column='[textscan.42342.850570763891].[none:5-decade:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
  </worksheets>
  <windows>
    <window class='schema' source-height='-1' />
    <window auto-hidden='0' class='worksheet' maximized='1' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.42342.850570763891].[sum:count:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='56'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[textscan.42342.850570763891].[sum:count:qk]</field>
        </color-one-way>
      </highlight>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Sheet 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAAgAElEQVR4nOy9d5Bl133n9zk3vfz6hc5hOkzOM8DMIBCJCWAAJbJEiuuirNXKkr27VVqV
      LGtt1zqVy+Wya2WrXJLKWq13JdFaK3BFiQkkwYBABGIGmBlgMDl0ji/n+246/uP1dPfrfh1m
      AAxBoL8oFNDvnXPvufed3zm/8P39jpBSSraxjQ8plJ/1ALaxjZ8ltgVgGx9qbAvANj7U2BaA
      bXyosS0A2/hQY1sAtvGhxrYAbONDjW0B2MaHGtsCsI0PNbYFYBsfamwLwDY+1NgWgG18qKG9
      0wuYponjOO/GWLbxLkMiKVrz5OtzKz4VxH29RI12QPyshva+wTsWAMdxCIfD78ZYtvEuImtO
      c3bhW8xVbwLNhF+BoC98gPs6nyZqdPxsBvg+gXindOhyubwtAO8rSCZKF3hl9m9wvPqGLX1q
      iEd7/1O6Qzv5sO4G2zbABwqSVHV8S5MfoO5W+MnM/0uhvnAPxvb+xLYAfIDgSY9X5/52S5P/
      Nupuhdfm/w4pvfdwZO9fbAvABwgzlasUrTtfzVPVUdLm5Hswovc/tgXgA4Tp8qW76ieRzJSv
      vMuj+fnAO/YCbeP9g6KVWvGXxLZckGBWbYyAjqKAVbXQAgZ2xcbf5kNTlRZ9PzzYFoAPEDzp
      Nv196Sc3KM7W0LpCzM+a7BqOMDu2gO4K1EQbvYd72Tkcadn3w4JtFegDhKDWtuIvgVd32fvE
      CKpU2H8wgaNo7D45yMjxHtI3F1DU5Z8/qLetveCHANs7wM8AUkqK1gILtZtUnQKq0IganXQH
      d6MrAYS4O598R3CY8dKbS3/vfXQXwYiPzv7myS0dl1BXjHhncOmzzsDw3T3Mzzm2BeAeo2DN
      81b6u8xWr675Tlf87G77CPvjj6Mq+h1feyhynPOpZ3A8C4BgxNeyndBUkt2Rpb+DWoze0N47
      vt8HAdsq0D2ClJKF6k2em/rTlpMfwPZMLuV+xEuzX8VyzTu+h08NciT55B32Ehzr+BS66r/j
      +30QsC0A9whVJ8+r83+F5VU3bTtfu8HZ1D9wpywVIQT7Eo+ys+3klvscSDzOcPT+O7rPBwnb
      AnAPIKXk7ewPqLuVLfeZLL/FQu3Wlts7nsVs8Tw308/SoccZDO1DFeurUbri50Tn5zne8dm7
      tjk+CNi2Ae4BTLfEdPniHfWRSG4VT9MZGNl0gkrpMZF7mYo1v/RZTAvT3/k0eafAXOU6FTsH
      CAJqiIgWZajtON3hA3fzOB8obAvAuwwpJaZTwHJLGGoYvxYjX5/BkVZTO6duI3QddYM9OGNO
      IPEQqBves2Klmib/bdStNEc7n+Z4x2cAKJozTOZfwZMOhepNirUxdsQeIurvv/MH/YBgWwDe
      RUjpMV18g1xtlAYHXxAPDGKt0DSl43D6mUuYtodnBEjGdSwpkOUavkiAeqlG//Gd9HT7qLsV
      pPSwPYuSNYfj1Qnp7QT1BEIsX9N2W9sVrrTxPBtFVfGkw3ThDJ5cTl6S0mW68Doho+uuvE63
      n9mTHhKJQKAI9edKpdoWgHcReXOcXJPeLsnVxvAUX9NnqYk0ajRG3XRIhgWlnIkvGKQ6Po/m
      08kWHXq6fWiKQc4cZ7r4BpbXsB8ECvHAEINtD6IpDc+NX4/R4PM3G82GGkJVDADqThnHq60Z
      s+OZ1J0iQSO55eeUUlKyc9zMnWWqdJ2ilcb1bHxqkGSgl6G2Q+yIHsRQW7th30/YFoA7hJSS
      ip2iVJ8FIGL0EDI6EEJQNGda9lGkh0BpqDOqxpO/8SiKpuB5oKnguKAqArfex1svjtHXtzix
      lQDjhVeaV208srVbCATDscew3TK2Uybq66VYn16+p9BoD++n7pbQFP+GBjFCkKpeJ2uOY3s1
      /GqERGCYmK8fRTSrX5Zrcm7+R1xIvYC5xqjPkKpNciV7mqS/h4f6fpHB6IGm3er9hu2MsDuA
      lJLp4hukqldZXm0FHcE99EVPMFV4jbw5vqZf1NfHjcoFMubEHd2v1z+Ib3EFXw2BwnDsETLl
      K0jpIlCJBnbgSRsJVJ0sVTuLJx1UYZAM7sRyipSb8oNBV8PUZJWiNbvm+u2BnexOfAx9caep
      OWV+OPZVxotbM+g1ofNA79Mc6/z4+1Ytev+K5vsQeXOcVPUKzaqGJFW9St4cJx4YplVqYSK4
      k0OJJxF38LqjeicRfX21ROKxULqIXCSxSVw8adEdPYbplijWZ3A8E0862F6VufIFECrxwAia
      EkBTAkR8fRTd7JrJf/v6qdp1rmV/hCddHM/ix+N/ueXJD+BIm1emv8HlzE/vOKZxr7AtAHeA
      XG1sw+9CRid90RNoih+BgkBFU/ykypdx7Ay72h5gK7m3PjXEA92/jLbO6n8b2qrorSoMKlaa
      wjrJLXlzgvbQHvZ2fJa9HZ9F00PUnNyG98jUbpE3J7mUfpWxwtubjn01JB6vznyDQv39Sbfe
      FoA7gLvKlbn6OyEEieAIezueZnf7U/i1CJ5nUbMz5GvjBKXC0eRTGEqg5TUEgrjRwxO9v0nM
      6CXq61v3fprip7/tFAE9iUAhoCdJhnZTs7NIWqc3etKh5hRQFA0hFNIrDPZSvsLKRbqSr+DS
      mMAzlUucW/gRkrtbxWtOibdSz991//cS20bwHSCot1NeJ+UwqCcxnSKuV8enRbHcCnWn2NTG
      8Wp0G3v51I7fYbT0BgvVm1SdPIrQ8AmDqBrBr4bJlC+iRRS6QgcomJNrVmmBQntwD2lzjIKX
      wxF1hHAoO1kUsfFPetsY9qSL5VbxahW+9423ifUmsHM5QrEIxWyJUkES7TWIxNs5dFxSsjLv
      4M3BrfxbPND7OXxqa+H/WWFbALYAKSWuVyfmHyBXG8Ve5U5UhU7NznI9/d3Fvw1C69TbcaWF
      X4uwP/4E++NPAFCxFhjL/QQpG3p81U4zmX+V4cRH2ZX4OJOFM5SsWSQePjWCpoYYL52l7paW
      rps1x5ksnac9MIwitCbP0W0YanjJ3SmEsqhiSWZuzJKpePR3BylOTVO0dEoVhcLNPDv2RSjU
      N1aTtoKqXaBgLtAZGnzH13o38aEXAE+6LFSvMVe9TNXOIoRC1OimN3SYmK8RIU1XLpOpXAMk
      ATVKQI9TtbMAhPSGC7RcXzYkXWlRrE8jFv9ZhkBVfCyULwOSkNFJUE+Sq40vGbO34Xgm+do4
      rmeCaxLTu+iO3kfNLXIh/S1caa95FolLqnaDkBbHJ3xNQqApPnoiR3E8ezFgpRPz9VPyz/FP
      /ttfQIjGSD3L5PSLN3ji4X1EgypCKMxVWguAbdrkpvJo0RCa4jF5NUd3X5C6HqC3L9jU1sOj
      bOfppLUASCmxvSqWW0NVdHxqaNPd7N3Ah1oAHM/iYuY7ZM2xps9Np0Cqep0d0RP0Bg8uTX4A
      2y3THTrOUOxRABShci39TMvrh4xOLKeM45koQkNRdKaLry+lHwpUOsP78by1kxmgZE7jLu42
      nmtTNCeZrF5sOflXouoU6Is9BtKl7pYpWgsU3TypzLeQ0kVTDBL+IXqC+zHUEJZYjiSr/gAP
      PXl46e+w3knRUqG21ohdeHua6bkq+WqWRNjDNAW5W/P0PNw6t8BrWXpFUncqTJROkzMncD0b
      IQQhPUl/5AQxX/976kL90AqAlJJruR+umfxL3+MxXjyN69ZYHWF1XHOJOtCop9P6Bwr7ekjG
      d+G4NWpOvqHmrDBQJS7z5Ysk/ENr+gpUDDVEbYW6VahPU2rB+Wk19qK9wL74J7iY/S4L9dGm
      713XZrZykfnKFbpD+6A+35KmHdQS7Es+Scn6Qevn64kxmIygXE6TyTkcfmgAWashjLXvQ6AQ
      1CJrPq+7FS5nnqHqZJfHL6FkzXM1+312xz9Gwj/8ngnBB1IApPTImBPMVi5RsueREiJGBz2h
      /ST9wyhCoWTNs1C9tum15qvX6TQG8BZXXSFUQr5O7MWEFVXRafMPkKpcbuonhIqhBCiak/i1
      OMX6zDreGYmHR3toL9nqTTzpogqdjvABQno7U/lX8aTdcKuq/i17Uqp2lqv555iprO+393CZ
      rVzmQOKT1J0S+fokjmdhqAES/hF6w4fQlSBdoUHeTv9kTf+2vhhtQLwrglRUfH4ViLW8l08N
      EPN3Nj+5lEyXzjVN/qbxSYexwk+JGj3o75Hx/IETANurcynzPWarzROyZM8zU3mbzsBuDiU/
      Q9Yc29JksqVJLLwb6dSpOQUy9iyvzv0VNScPQECL0RncRdDooGqlAYmm+IkY3cwX30TiNozS
      DVYwKV26wkdQlBA38qcp2vPcqo6jKQYBJUDcaGcweoyKV4Ty+S29B9MtkS1NbdpO4jFROs9D
      Pb8GNIhtilCbKBADkX341AB1dy2XCMAIbhyvAOiN7Cawagdwpb3uDnwbdbdIyZonERja9B53
      gw+UAEjp8Vb6m6RqN9dts1C7zvn0PxDREndwXQlagMvZ765RFUr2AqXCAoYS5Ej7Z0j6d2Ao
      IabyryJp6PqedPA2kDVVDfLyzF9zs/DGuj78qdo4J7o+g4KKx+YlTCy3tu61VqNsL1C2U0SN
      LpQWchrSY+xLPsibC89t6XqroQqNodAQk9mXCPt7iAdHEELB9eo4nsXNS5OM30oTCwnGRnMk
      +5OY1TrS9Yi0xxn+hUfu6r5bwQcqEDZXvbLh5L+NrDlOZpOVZyXKdoYz83+zYTqj5VU5l/oG
      NaeEECrKKvJZ1NdDUG9f00+icWbh+9wonNlwws5Xb/KT6b9GV9fq0auhCA2ftoKf5dhcfn2M
      a+enGLs+TzZf59q5cUzLWxyDpGynkVI2/XsbQgju73qShL9n03u3wu7YUXTq1J0C2fI1yvVZ
      CtVxHM9EFRqGWeDCW2NMz1SZn1xgcs5G9Wkk2yNouEtcpPcCH5gdQErJVPnNzRsuouaW0MTG
      iSbQmEy3iqc39bxAY0t/M/0tHu37TZLhvZj5HJ5nY2gRAnoS17NxRBUUBUXoBPQEZ9PPUbJb
      68CrUbRSOJ5JZ6ADV65XAFewI3KCkr1A2U43PjKrTM/XSF2cpG13F4d2ZHntpxncYBv79y7q
      7FKSq90iVxvF8SxCepKO8AEMNYwQgqAe5cmhX+OZW/+WopXe0ngBdsXu48Hep5nLv47EQ+I1
      VEPpogidoBZj4L5D/PZ9h1r215UAEaN7y/e7U3xgdgBX2pQWy/t5jotVd7CrJhfPTVFMFXn7
      7CT1mkXduq0+KIRarMirEdDiVBf1/a2gYM2RqY2Rq9zE81xU4SMZ2ku6fIWanUEVCmEtyZ72
      pyg5VQp3WJKw6pQw1CRtRi+rvU+6EmBX7DGGoqeIGF3LX/gCHDrex4OfOcjBAx34+vs5fl8P
      AwONXUIgqFkppgpnqFipxkpdu8Vo9gVsr4aUXiMibU1zsushekM7NiX2aYrBrvhhBtp2cKt0
      hpyXpSZNwv7epUrUnrTp8O9CV4LrXEXQFzmOoYbW7ErvFj4wdGjbM3lh+k9wPJPy1Ax/89W3
      SQ7GwbbxChUKmp+YsPD39fDpXzyAKnROdX2FK9nvr+uF6AjsAmFws/BK0+fFXJVofL0fDQZC
      hwizvG3rahDLLS/9LVAZ7vgk37j5rylvcfVfiZAe5xdGfpeKnSJnTuJJh5DeTszXR9mcwrQL
      KKqfS/kfb8leCGpxkmpHS65TZ/ggitBYKF9kJQXcIchUZZKFyjh1t4onPVRFI6THiPljoFTw
      WLtLhbUknXovfuHHp7XRGz/VcBHnX6FkLyzdQxV+bCtCpmQxXZigVC/gSY+gHqIn2s9Icg97
      Ow8R8b+zinY/VyqQJ11y9SnmKlcpWY2XFTE66Q7uJebrw6eGcTyTUE8XR0+kEaEIbYkQldkF
      6poPXQF/WxQAXQkSNtq5r/PLTJTOsFC9huVVEQh8api+8DF6w4d5M/2tNeM4+8NL+AI+tLY2
      6uUSvUPtjOxfXnEd6SAUdSm6G/X3k6lcXzKKg0aSQn3hriY/QMXOUajPg1vFs8oIIfAbfkwr
      Q7666PO3Bd2B3czUNq76rAiVkcgDZCut25Xrc4spl80U8KCq8Onh38DxLGpOGW8xwFa25zmb
      /vt1iYNlJ0PFyXEo/kn6oidRFZ2w3snBjs9RsbNUrCxvTL7GK7deJVfNtfTUXVm4wHM3vktA
      D/HQ0BM8ufcXaAvEt/Lq1uDnRgAst8ql7A+YrVxemkgA2foEE6WzdIf2ETN6qNhphKpy4skj
      y533d665XkdgGFVoqKrGztijDLc9RKZ6k3T1OlK61KwUBXMSTax18Tk1E0eCUs8y9naKQHez
      KhXQYvRFT5Kp3MCWNnVsfP4OpFsnqCdIBHcx3qpKhGUxMVVlYLh5VZsdzdE70uy1miqeZ6Vn
      fKF0cVVao2QoehJF9a1rGylC41Di0yT9g+SrN1ryh4RQW37ueCYSB58WxKc1dsO6W+bluW9t
      yJptjMzjcv45OoK7iBidizQMjYpp8xdnvspY9saG/W+jZlf48fXv8Nr4C3z5+K9zYuAjdxww
      +7kQAMezOJ/6B9LmaMvvJR6zlUtE9A5UYWz6A2iKn5G2h5b7S0m+NslM8eySJ8Zyy1SsFIoa
      WtP/E7+6wi33S2uvH/P1Mlu7xkT57FIub+O+PvpCh4kxgtuK/uDYvPXcDW69pjJxLUPHSAfB
      oIrlijUCULWyBIzlzyQehhrG82xsr4oidArWLCG1jZ7AXipODtOt4EkHXfWT9A8zHH2AkJ5A
      So82/45V+cwNUl9n+CDThdM4XnOlOkMNoa5aHG4UXtlS4S8AR1pczb/Iic4vAnBt4SL/5tX/
      g6pV3qTnWlSsMn/22h8yX5rh6YO/fEd93/cCIKVksnR+3cm/EiU7RUdgF0VrFttrXVpQEwZH
      kk/jV6NLn3nSYb78dgs3pER6NQwluOUf1lBDzFevkmkxXserM156nYI1R7u/BV9G1dj30BCV
      qRS+4734kjESEY/5hbXCEvV1QZNnShD2d9MROchM6RxzlYtIezkxxhA6OxOfJO4fQlX0RvWG
      RSNaCIXe6HEUoVIwJ3E9C1Ux6IkcI2x00Rk+yGzx3NL7UYRO56qaQp50mVun5ON6WKhdXyzo
      NcO/eeX3qdpbLxy2GhLJM5f+jqAe4qO7P7PlneB9LwCedJgsn9ty+6qd5UTnl7lV/Cmp2k08
      6SzSmV0kKu3BPZSsEqqYIebvRhUqtlfDWqdqm5QeO6MPcDm/tSBQVG9vOflXIl+fQqCiCg13
      pXrh87HrgA8ONKtUQ6v6q0JjKHaKsjlF0ZwCJIngLkJGJ0VrltnK26zmL3nSZqLwGhGjE0NN
      4kmXsrWA61kE9CQ+LUxv9H4MLcx86W1caTFVPEPVydITOYZPa6NUnyFrjmG6Za7ln0cVBjF/
      P73hhrpZcwqLN/OYHsuhqxBIhMlM5ensDXPhzDT7Tu5AUwShiA/Hq5Ovz/Pnp//oHU3+25BI
      /v7C/8dgYhc727dW7Pd9LwBVp7CuG3Lu1hz+ZAJpmkQ7oqgK1NwCQigca/88dbfCxczzXEy/
      TMVucOenio3KCQJB2IhzIPkIe+L3IYSyhpLcaKcwEDmKouhczv5oXa+Kgsru2CPMraJgrIei
      NUvUSJKrb05uW43O4AhhI0HJnMCRdSSSQn2KsK+b+fIlQFI3LQy/Aa6Di4qmigb5rnKF/shx
      xnI/wVx8rwKV7sgRgnqS+dKFFTuhJFu9gaGESIZ2MVU+S86abhpLtZwhXb3OSOyx5Q9dh2sX
      Z8ndShHrCDI7UyfQG6UnbnD55WvEBnvZd9CHBH507TvMFO6sWMBGcDybvz3/Z/zex/4XNGXz
      6f2+FwBX1psmZj2d4bkfjCIDQdTCPKYaQ3g2T37lFCoNyq3jWVhujecn/4rRQmsDUCIpWVle
      m/0mV7M/ZXfbHrQWu2ZQT+DTIgxEjhLQ2hgrvk7GHF+aJI3qCcPsjT2OEILx0hlc06TiqETD
      65cicaXFjsgB8vXUlikLt+93rONJ5ssXya6IeptOnvH8S9QX2aOv/ug8fp+OWylQifQTVl0e
      eHwvNSfHbOn80uRvvAuX2dJ5or7elmMpmBOYskp6nSi75VUZLbyMpvhwXRsUlT1H+qh0BzFC
      AaK9VeIdQQp5CzOVo2/RnpESXh9/bcvPvlVM5G7x9uxZjvWd2rTt+14ANMWPIrSlSKwvGcOp
      mqiajqap6JqCqhhLISFFqEgp+fatP2ahurZESSvk6wucS+c4nDiKX12etLoawhGSV2b+PTW3
      sb3rip+h6H10BnbjU8OE9CS64kcIwewiI9RaWODr35zgyPFupmcqJIMeepuf/EQZIx6layDC
      noM9RI0E93V+mjcWnmG1yrIejnU8RUdgB1dTa3MQHM/EvX1Eqmtx9fwUhk+lpkkcy+HYI3tR
      UKi0DL5JqnbrCK+Hy2z5rQ3HVXdL+JQAdbcMqkrfYBwGG67JoRXmgvR2IBYJR9lSlXL9nas+
      rfDTsRc42ntyU1vgfS8AATVKSE9QvM2DFypP/2frk6OCWpxzCz/a8uS/DcezuVkc5ZODX0FK
      G0Vo3Cy+Ssm83tTO9kzmq1co1Gc43vlLGCtourc5K0JRGN4Z58blBUoVGxGBoGeRz5j0t4cY
      u1lg36FedDXAwbaHAMG51Hc3PKdLoHC841Mcav8YUrrr7hp+rY2Kk+GBT5zkyIM1/EEftuNh
      O5KgCvHAELlq66rTEV8f+droGt97QE+Qqo8B8NpzF4nHA0STEVR/EM+scO71KT75hfvoCuyk
      4uQ3pI3cnvwKKrnCus3eMa6lLuJ4Nrq6SWWN924IW4MnPUynRNnON8rraUHCenxpVVUUjcHI
      /VzItM66Wg2fEudSbi13fSsoWhnGSzc40fVpLmS+Rclen6ZgukXeSn+TU12/slS+JGp0NYSg
      v5/H+5cLzo5dm2NguI2ZSYuI36auN9L9Yr4+FKGwP/EIYT3OudT3KFpppPSWVi6BIOHv53D7
      xxiMHGm4eKUkpHdQrDfTnQUKw/HHuJV/EYIZAsHm0oRRo5eO4F7wPBZW5Qloip/uyBECepy5
      0luL+Q+CeGCYZGg3E+WzjecupJipd3Duh+eIHzpEIV+kJ9Z4/pAW52j75ziX+kZTrKYV9sc/
      zhtXv7Zhm3eCml0lVZ6nt21gw3Y/MwFwPYfJ0iUuZX9CqjaB41qNAqtCENAi9If3c6j9ceK+
      HvrCh0nXRtdw/FejO7iXTLV4Rzr1alxKv8Tu+DEWqtc3bVuxM8xVL9MfPgo0uDi9ocOMl840
      tRva0yBzDYws7xZJ/zCFepafznyL2coNLM9s8F1o8PFjvnYOt3+U/vC+xgF2UjJdOEOpPo1E
      4lMj6GoI271dM1QlEdyJJ112xp5grvI2OXN8sTKcjqGGUITK5fS3UBUfiqI3lHBkg5IQvR9F
      6KhqAJ+vnaqVJmR0EA/uxKdGMNQwlltm38nD5GazHPrVjzN2Pc2hvQOk8zYKEDa6iPt3oAiV
      tzPfx3Sbq2IA+NQwB+KfoCuwn6r1Z3f1G5VSFSIda+Mzq5GrZTYVgJ8JF6jmlHh5+muMFd/a
      cLIaip/7uj7NweRjuNLheu4FJsrn1kQmFaExED7KntgT/IfL/xM1586DKStxX9djFO1xKrkK
      RjSIrjZW42KmTDgZbqKBdQR2cazjC0t/W26N86mvk6uvn4yiiQBVx2OmfIuNdH9DCfBgz+fZ
      l3iIUr1R2nwlIr4+EsGdVO0MC9WrS3wjReh0hfbTGdqPK21S1WtMl86uuVebb4Dh2CPoSpC6
      W+ZK9vvk6s1FtQQqfeEjBLQ2xos/XX+sapiEf4SMOb50EIgj6+hKAF0NoCsB2v1DdAX34lOD
      VK0K//13f2vzwFe9zqVX56jP54kMJsncLBIdjrD/4Y0nNsB/8fB/takhfM93gJpT4gfj/w/z
      1c0DW5Zn8trsN6g7Ve7v+jT7E59kIHKMuepV0tWbOF4NQwnQFzlGT+ggplvFdLZgVDkWqZRL
      R0/rNLuMOYGuwtj5cXISfLpC2OdjcrKIz+fhC/hwrTpdu3YSOdBwr0opqbslynaGvvARQFC0
      5pr0YUVohPVORvPXKdmblxqxvBovTv81FTtHb2AtJbhqp+nRjjNR+GkT2c6TNrPlt1CETsjo
      aDn5AQr1SbK1URKBnbyZ+npLUqDEZap8jq7gPrqC+5lftQtLJFJC0UqTra8tDux6Fv2hw+yI
      3t+UZaar+pbclEhJqD2E6jpo0kM3VKS2OY0dwK9tnkdwTwXAkx6n5765pcl/GxKPN9M/pD04
      wGDkMCE9gU8YGAg0xQd4zJbOUbHmSQb2rbueTr01zfR0FV2RqKrLxNUKB5/aw8iu6Jq23uKm
      KBRBIVXGFwiyMDeGEYvhagZ2sUjdcsjlLXTVT92tcD33PGnz1ordSeBXwyT8QxhqCEPx0+br
      5ZWZb2xp8q98A2cXvo+TOEVEa9bpFVSK9ZmWqgZAqnp1cVKvv8uka9cp2el1GbG3MV+9wpH2
      z5PwD7FQvUrNKaApBroaYrp8cc0BILfhSptr+RdQFR/94SNLto2uGsQDSYrmJlRzv5/BQ344
      1AgODm3cugntoa5N29xTAZiv3uJG/o077udJlzfmn6E3tId09RrzaxK9JcX6NJZrtqiS34BQ
      RcOoVkHRNEaOdqOso/11BnZRsG9w4PH9LHvwDi79n2tbXHj5JgN72wjrHZxd+NulHOGVY7K8
      Cgu1qxxt/wJxfz+jhTeZKF264+eXSG4WL3Mscazp83hwZEOKhuOZVO2NK7pZbplcfW1x3FaY
      q17mYPIzS/m5Unq8mf4WzrrJObfH73Gz8BKdwV34VnCrhhK7GM9tnsF3N0gEO4gHNz/z4J4J
      QKMMyemWzMKtIGfOMlO+SsFc5pu4jguKgnRdNF3DdLL4VD9mi+TtvoO99B1c83FLjMROMlo0
      ya+jx6u6wbEn9mMoISp2qsXkX4YnHa7knuVE11d4O/MiW/X3r0bNrRIN7MJx8pkEDHkAACAA
      SURBVNSdAqriaxTh3eB9qsIgoMWpbODN8qRcVNM8/uMf/oCTX3gIpVoinTaJJ/2YFnT0tCGA
      UE+zMNXd8pZTS+tumUxtjN7w8o9wX/+DvHDz+1vqf6c43Hsf6vspEuxJl7nK1miurSCRTJQu
      EFQcpsbnSc+VcAo5rGCY6Yks+4ZjRPv7aU92MVUeu+v7tBkd+IXGjuBhak6+EdhpAVXo7Ix9
      hBu5Fza9Zs0pMFu5xFzl7lc7VzpU3DrdwZ3MFF7Hc6vMFs/i12LoSmBNuUaA9uAewkYH6dr6
      5V8SgWEqpTwShcHdCUYvTrPw1i367hvgwk8y7BoJsXDxBr2PnGIHSuPIJreKpvqpOvnlwBvg
      ZVI8+2qOZJtg/+FeFmZLDO7rZtGHsFjTaFkAdrbvpSfaz2xx8+oVdwJFqDw4+PiW2t4zAbC8
      2hoD1a47uI6HQGLZEs/x8Ac16nUPXQWpqgRDy5HZip0n5G+jODbJ8y/fpK+ji6ph0h1XeO3H
      l9nzeIAv7P0cc5VpnC3k8LbCSHQ/s4XXAdgZOknWmSVVu7lkzCqotPn62BN/nLpbXuIGVYtV
      0HTMUpVgxE/dcvH7dYQQGD6NydKFDQNdW0HWnEbziqzcRUwnT1f4IOnajSZuT3twN13hAwgU
      esLHmC2/yVovUB+D0QeYr17DdIvsvH8v6aksO79wglAswMAul3BQ4cJrLjv7AvjUIKOZH2O5
      ZVTFwO/rar6iY3P94ixppUQ1U2YhW8PfHqO3o2GMrg6wqYrG5w7+Mv/21T94VytHH+s7xWB8
      55ba3lMVaLXLc/zcDFfOTxGPGJRcHx39QcYv5+gfjCA1garrnPj48FJ7ITRCejt7HjhMz8E9
      GH4fjlXHdAQnH9hPON7JQOQIRzrmObvw7B2PsSs4zK7YUXKV60gkjlulTUmgGxIXj3hoFzFf
      PwGtDSEE8yvov9//yxeIdCcZfXuGzp09lCoOg9067bt3sn9/suUZwdLzOPOty8SSAaquwuhb
      8xw42U16tkqsI0jv0X7ikWWPh+WaeN5az5VPDbMz8VFmSm9ScTJEjR46Q43JL4SgP3I/Yb2d
      heoVTKeArgRIBEboCO5DVTR6QocYLb5CoiNKomPZKZBYJKU+/vQRBAJdKlhew+vlenUq5jSq
      0JfyL0QkyqMf20k8bqDjEZ6tkGhbjsSGWxQMPtp3imN9pzg3/e5wgqL+GF88+qvvPzq0rvrQ
      FT/2ii1zx542yjWHeFcEza+xMJpj/8MDtMcMxi5OUbGb3V0hPc5A9CSmk0fz397yfbSx6K+O
      HseVNsc6P0bBSnEzv3UaddRo5+GezyJx0dUwiqJRtTNLNosAauYcXcG9Sy83oC0fTrfv/hGk
      puH3+wlEgzgolGcWGNzdIH7FfX3AWgNYUQRSEfg0jVhHkOmbBYZP9TP++gwHHml+/oAWJurv
      I1tdViVVYZC1ppjKfnupel3GHGOseJr+yHGGoqdQhIZfa8MvQqiKIGR00BHcs6QjD0TuI1ef
      WNfmARiMnkI49SYSnYJCzNe7ZAeIYJhjJ5djQr27lvsbSpD2FiUgFaHwKyf+KenKApP5rXsH
      W8GvB/nNB39nS8bvbdwzAdCEQdLfR7W8TAAxEm0c++hy+l/fyHJeZzDmQ1sVyu8KDhHUk+xO
      PMlM+TwVa6HB/pQ2Na/K5dyPcaWDIlSiviR94SFmKxPrFGVdRn9kH8eSD5NfPPtLCJWI3oNn
      NRuYdaeI6RQI6kkkHiEtSVhvp2yn2P/AWv55tdxLUBMNe6HtAc7OP9+kmglF4cTnlv1M+x9s
      0Cdc0yIYGFxTcTTh7yUeHEHiUbMyaGqQmldmYlXkGRr++8nS6zieyUjbR5jKvbqU1ZWvNTLD
      etruJ1u9Sak+Q0SN42hVKk6hicagKwGGog/QFz5KtnoDs7wsAGFfN13+PooLc+smIC0+KUPR
      U0vVHVavzgE9yD9/5F/yp6/+n4xmNo/At0LICPMbD/2X7OrYf0f97mEkWHI99zrPT/0ld+MJ
      CWgRvrDr9wjpjTo2UkpcWedW4aeMFk+ve02/2o7tqkyVrlJzluvpa4pBd2iEg8lHGIweYjL3
      MuaKgyhUxdfi/F1Bb9v9iyVCMqiKD1ULMF5+c0Puy862R9gROcH3x/+U8eKdHzMEjQPnHu95
      Gm8x3bEzcghNDfLGwl9t6lnbFX2EYnWs6TNVGPiM+Bo+UTwwgq5HcLw6PjVCm693ieQnpUeq
      fImCOUnQaKc7cgxFaKRqN7mY+V5T+udtCFS6A7sIqxFst4qhRegKHyFoJJBSkq3dIlW9iu3W
      EBi8MXGJMxNv4npb9xbuat/Dl47/Y/rbRtacarkZ7ikVwnZNvjP6x6Rqd8bUBLi/8zMc73yq
      afWYKV/kQuY7bCZQO9s+wlD0FBW7QN2togmDsBFbItxJKZkunG6q8R/1D1Czs02nvPi0Niy3
      sua8XZ/RzoJ5a80EUITOUPQkg5GTCKEwXb7Gd2798V1xlWJGkqPx5TiArgRRjSjjpdOb9o0b
      /ehrbilwsFn97lRhsK/zc4BASg9FaAghcDyLmeI5crVbuNJpnKPg62UgehJdDVFzCkyUzpKq
      3cDxrEbRYKObnuA+MuXLS+rZ7Xvsan+KVPXaonHePC6NXs5PXeXt2bOU6q0po7qqkwiH2dnV
      SW88gQBUxaAjsJOh6AME9a1VibingTBd9fNw7xf5/tiftDhjdn30hnZzuP2jTZPfky7X8y+w
      ld1krHiGvvAR2nytT20RQtAe2oftVrHdCn49Rkd4P550mc6/Rt0pETTaCRgJ5ksX1vb3HE51
      f4VU7SZFax7TziFdi6jRRbtviNsFrHpDu9kTP8XV3PqcmpbjQ+H+zqdw7OXsMVfa1DeJ3t6G
      FIKov28xfbKBiL+XXAsfvittctVR8rUxPM8m4u+lM3KI6eLrZFbYHlK6S/nDuxIfB+liSEm7
      1oEidLqjR4n6+snXRpsmf+MeFpnqjRYBTQAJSoav3P8bWI7NVGGM6cIERTOP67kEjRCd4W4s
      MUXJHVvs4SIBz6sxU3mbhdoNDrd/jqR/89No7nlluI7ADj6+49cJb1FCByIH+diOX1tzYmLO
      nMRccUTQRnClRaq2fgzCdmukq9cw3RIuHj49jqoY1KwMtltBEQqmnaOyzkmHjldHU/z0hY8w
      HDlJAB8BJYjtlJjMvUxlMZdBCMFH+r7EjsgWI3I0+EOP9X+ZobbjaCsO12vzD2CoW9t5NcVH
      MrwXXY/iCkkksINEaFfL6m6KUEiXL2O7FVxpka+NsVC6SHYd+krZmidbG2Ui9xK1xXOJHa/G
      dOEMllted3mqObl1VTfHMzGdIgEjyO6OAzyx61P8wqF/xBeOfIWn9n2eZFRfmvzr9b+Q/uZy
      jvIGuOdkOCEEPaFdfHbktzi/8Cy3CudbGFCCiJ7gYPtj7Es8jK741lxnqe6l9Lj55gT+WJiq
      6WKXTfKpAvmSy6nHd6JpKrFkiLKVXjyGp7ZYrzOMIlRcz+JW9rkm78Zc6U3qThHhrdQbJN46
      fJeAnkDQUKUK5uSa3OJ8dYywr0Fm0xWDTw7+OmfmvsPFzIvNSfGrENYTPNr3ywxEGobyjvhH
      SFeuULMbBaOCWuta/GsgPa6kv7u0Ei9UL1O0Zoj4eppOl2/w/0co1ppzdEv1uQ1tnGz1xppS
      NFK6lOoztPl3MC/0pl1AEY0zFTYqjb5eFNf1bEY3YKXehuPVGS++zr7Exzds9zPJBxBCENbj
      HG7/OFG9m/Hi29TcIkEtQk94Jz2hXXQGB5uyrVpcpfEf12NqpkT1lSv4ezqYz9poAR9DfUFG
      z98k1NdPLBlqVEXIv7z0g+tqiP7oSWpOvmny30auNkab0VwNOerrR1ODTaqEpvgx1AATuZcw
      tAi08jit8npoisFDvV9gX+JhLqafY7p8lZpbxfUcDNWPX/XR5mtjILIXqFKxM4SNdmyvRtGc
      RkoXyymhKQGCaoyquz4VQxM+6nYBVtkdplPAUEMMtD1ErjZKzc4S0OOE9A4q9fmmCG/E30PJ
      Xj95X1P82C0i5q5nka+O4lMjmE4eRej4tDBdkSP4tLbG8UwtVOGAFl93d8vXp1tGvRuQVEp1
      QpGG0Z4xb+HJJzY0jO+5ALiew9XsGc7PP0fGnFkVHRXMlifZm6gQMdpbCkDdKVGsTaIud6Gc
      LnLkqfsJJ0JMXZ2noydCseyQGasxsLsRzanbWeSKPAHbrTCRf4WAvt45AZKwvwfN8mM6BQJa
      bPHMLou4fwhdC6OpfjzPIbNYVrBmZ/FrcZQVK55AIR4caXkHXUi6jRid8fuJBUeIBnYwUTxN
      qtZwx2bNW2TNW0yV3mgUiZV60+7ieDUGwseYqLzZ8sBrnxqmJ3iAzDrJPaX6HL2RYzheDU/a
      VKwFKlaKkNGBX2vD9WzaAjuI+vvJmRPUWpRy1JQAPdFjTORebnIOCFTy1bEV70HQHtpDxN9L
      qnwZ260S0pI4ntW0O2hKgB2xh9adtKvV3qunr1OsOhRLDrGoSibv8uQvNs44sz0T17NQNlhI
      76kAFOsZnh37KtOl9bgpEtOp8ObC81zJvMYTO/4RexPLic1Seszm31habQwlgEWNz/7qR5au
      EH+wETnuBjjYUDs0YaC3KHHoSmvNWb4rUbeLDeKZ0NG1ENXb1ac9m65Io5z3TKGZ3epJhx2J
      R5grXmY0f5mqI7lWeAZFCKK+JD3hHQzG9mCovkYF6cUfv2ROUfOKpFrU8pR4zJTO0+4bXvNd
      UE9wvPNLzJTfIl27heVW0FU/Cf8QfeGjFM0Z1uODSiQLpYur3oGkaqUZTjyBX49j2jlqdoa+
      yH1r8g5UYdAXvR8PaI8colgdxXIr+LQwAT1JttIsePnaOEVzquka3aEDSFjsFyERGMFQ1y88
      vPqsgHy6hlQdMmkT1zRQAsvfK2ibnjR5zwQgb6b4+rU/oGRtjQtfd2s8O/rnWG6NI50riU3L
      FYr3xB7nYvbZTd2Kw20PYq7a1m8jFhgiXbm6Rof1a23UrAyetHGxqFlZDC2C5VSwvRo30z9Y
      zHZqTs2r2Bbfvv43XEmfw1nn9Ee/FuRk70cZji7XLBVCYWaD8w08XMpOhrASW1pphRLgeu4y
      Y4UrLFQmqDplVKER87czEFUxRCdx//on4RhqqOU5AxKPipUiVb5MZfFgcF0NsaPtAepuiZpd
      oGRnmDfHuTHz5zhe490pQqczMMy+8D78Yq3d5np1nFVmseua9MWWs7bqjkmusoDj2ihCwacH
      CfkiCNEw2GO+3qZTck5+6hACOOHJhlK8Qt2M+Xo3FYB7EgewPYuvX/0D5ipjd3x9VWh8fvdv
      0RfZjSctctVRKvUF4sGdRPy9TJXf5Er2h+sUrBIMR0+xO/YYk4XXKJjNxp0iNPa0f4a6U2Sq
      cGbp4Omw0Ulf20nm8m8srVZR/wCd0cPMFs5SNCebrhEP7sR08lxMXeD1ufUn/moE9RBPDDzB
      cHwvUlG4kX8et5DjZk5FKxcIdkRpT4RRVEF5Zo74wCBHO75IzcpyMf0a51OnMZ318wEEguHY
      QXbFh3C91R4RwXDskcZpLebkmr5ho3tpx1sar9HOjvhHuJB+lqu5l9YtEiZQGIoeI66Emxad
      ZGgvRXOyqc5oMrQXs67ywpWv8+bES4ymLlGtF7FdC0Uo+PUQyUg3B3pPcWrnk5za+SSjxZeZ
      rmxcpgUEJzq/TMzfv3GreyEAZ+d+yE+m/u6u75H09/Klfb/DTP41LLcECBLB3bSH94OAipVh
      rHiarDmB5VXRFB8xXx+DkfuJ+fsRCByvzmT+VcqLLklVGPRG7ycWGIBFD07VTjNfvkTVziLx
      0BUfuvAT0ttpj+xvlEpJPbsmENbTdoLTMz/l5cnv3fGzKULhc3v+Mf1tnVzP/Qh7ZoKvfv0G
      juUx1OEylhaEgga7uhUe/vzHONLxJZ4b/zqX01snj/nUAA/1PU5QU3GlhU+N0B0+TNTfS83O
      MZ77SbPR6+sDJJVVVetUxUdR1rlZ2Dz4BtAb3MvuyHFcr07Y101bYJCqnWG++BaOV2M8NcYP
      LnyXMzd/tOXgYDLcw+dP/OcM9MdxxHqxJMHOto+wI9JIw7y9e7Rs+V4LgCdd/uLC/0jR2jgz
      aTM83vdZAsqyy1AVBsPtn0BdjA940mWh+BZFc4qAnqQ31rAdbLeGIjQ0xQ9IKlaKudKb2J6J
      KgzigUGSoT24Xp2r6e8t7QIr77Mr+QnCRgdSeoxmfrzGbpip1Hhx8sfcbbKLpuj84t7/hJJz
      CTeX5pkfjhGNBYkHHGQoTi1bQJEWH3nyEVIVl0t3MPlvw1ADfHn/79AR7FuK7kKDUmI6eWZL
      b1GwZvGpEfqi91OzFtbo8HWvzrXyW3dEXX6g60sMt51o+qxQTfNHP/hdnrv0d1veLVejKzbA
      5x74In1dPU151wG1jaR/EEVKLLexGCaDO0kGd7U0rN9zAZgp3+RrV37/ndwCgB3hYQ7E9yz9
      rSo+EqHd1KwMuhoiZHQxk3+N25OwLThMsT5D3S2hoBILDNEZPsBk/jXK1lzTtTvDB6k5BdLr
      nBsc1JPs73h6sYz6KHPFZW696UqeufVDLHfjtMDNEPe38/DgYWxv/eBe3rS4lLrzlMrbaA/0
      8ZVD/w2G2tDPpZTk6lNcyT1HpjbWpNKEtDgRNUpYjSIQqIqP0cpl8utUj1sPIS3OZ4f/Jcri
      Kjydvcm/+o9fZOwdPMdtqIrGrzzye3z2/l9BShe/FqVu55kqvr5mR+kM7ac/emLNbvCeG8EL
      lTsvfOpYLprRLK0lu0LQ6KBmZRBCRVeDLKygJZTrc6iKsbSVpytXl35QF5dM9VqDw75o1K1E
      rjpKfYPc2qqdoWKlyVauNXJsBRhqhPbQXn4w+t13PPkBcmaakqkT9vvX1OIHUPAxmrs7puRt
      pGvTvJ16mfu6P4aUkvHSWS6kv9NSl684OSpOjg7fIPsTH0OicD7/8h3fs+LkyJlTJAM7GE9f
      4Xf+w1Nky3Obd9wCXM/hqy/+b1TNCv/sE/87rmcxlnuxpTqVqlwjERgmtCon4T0XgKrTekW7
      8eootuJH112MgEElVSHaHSE7b1LJlTjxmX1oK6rV2p5FV/Q+PK+OInTmS80eE9ut0tt2grqd
      x5E26Ra16hsRzbUbXuMc342zteaKZ5tUn7pTpGJXuJbZzBjbOq6mL/GrR/8FE6XT5M0JJB4C
      lbh/kKDWx0vOO08aOTf3PMe6HiddG+NCpvXkX4lUfZxE7RYRo3vVxGqUQ5m5laV3OLH6vL4m
      3lbBmkeVAf67r33xXZv8K0bB107/IQPJPTxx8OmWi0ejXaMc/D0XAGUNq72B9FgGvS3M6JU8
      nf1BcpMVYl1FihWPnj0xVtstQigoQsPQG0GN1e5HVdEJGZ1E/L0UzWloIQCa6keR+lI1tdsI
      +7rQ3BLFFnVtoGEHrKVGS66lX1v39PS7wUJlhpptcyD5mcaRqp6JpgZQhcbl9NYMz82Qr6fI
      mQu8nfnellM0rxdeYlfbY02fSU/y0t+/RTVX4Zm/qDKwO8FCxqa/W8cXb+MjTy1nw1iuye8/
      +8+YzL6zHWx9SP7o2d+lO96Nutb7uiHecwGIGK390Ec/ewjVr3PwMRdFV7GrFr6wgVmx0Y21
      YhMx4qgrfLrtob2Ydm4xxK7RHj7E7WUoaCTR1eCaSRsPDOLX4kwX31j6Lmi00xU5jOWUF3eI
      tdtnd/gwhdoorOLtZGqb68Ou46GoAs+TqOrG3EOJR85coCPUg6roqMpyPvRcZX0Kued4S2Vf
      oKHbr3c/T7rcyp9dPJFxa/CkS9ZcdX8hiCWDhGJBor2SRFeI9ppH/uYcsY5mm/Dc6Iu8cv07
      W77f3cBy6/z75/9X/umnfrtlbEOgEjbW1gl6zwWgJzzSIIqtrjgcXYzYLer6hq+xsodjrUPg
      veFdSz+w49pcmT3HmVsvcH3uDVKlGSzHamSCBeIMtR9gsGMnvckEkWAYBY14cIhEcDcCQTIw
      TK46ik9vo6/tJKpiYKghhuOPMl54FcetI0Sj8FZP5CgdwX0oCNKVK9w2fjXFj1A2Z2Ne+M5l
      EoMJLMvDtiUjJ3rx+dYXhLLVmsG4kb9/4vQ4OUejvd3ARcUplDGFj0MPtj7ZfaZ8BVa85lqm
      QFkEsLIFenZ1tKQIu9Juqj4hhODwE3tWtZKUDnUQia2kHgi+8/pfbpqV927gysxZxuam2dHV
      uWYh6wjtJaivTZV8zwUg7u+mJzzCTPmdFEAS7E2cpFDN8A9v/N98+9y/Y744sXTg8mqcHWsc
      Z6SrBkcHH+ErD//X7O041DgDqzZBptLw9tSsNJnKNZKhPUyXzrFQvYrj1QGJT4kwHH+MiNHT
      yBcI70NVDHK1W+hKkM7IIa7m1x6huhqKT6c8X2Bhokb77jim5W0oALd3MU+6eNJFERqKUNCU
      9Q/bAFClzc3zBRzTpHOkA20DHqGH0zTJzXSeF1+8hKPoDIzmUKolLpxd4GP/5BF2DkUazyFU
      BiPHuFF4dcOxN09+KBWqTKVbl2N/L/DS5R/xr/b9CenqVWp2HiEUOkP76Ajta5ko/54LgBCC
      kz2f5pvX//iuS1+MtB3mlSvP8O9e+B/uyIiyXYvXb/2Ys6Mv8PDuz/Ivnvq/EErzClu1UmTq
      4xTqzUf/1N0SVzLfZ1/yU0SMbvK1cRbKl7C9GoICrnQI6etzVm5j9wP9OFLQf6TOpVfm8G84
      +SFsRJkrXSBTu4Ht1tFVP+3B3cT9a496vY3e431E8xYjhwSeoiLrNkZk/bqY3aERFszl1Ew9
      5CcaC+JrC6N6NUQwyP4HBom1LSvUfjXCgeRHmS5fpLZOKcbVMJQAk1PvTeW39fDW5MtYliAZ
      GCHlXMSVDsXaBEEtTsTfu6b9PeECDUYPcKjjUS6kXrzjvq7j8sPTX+Psra0dUtcKnnR56do3
      eXvqVf75J/9nRrqWVYOKk6PkrHMyirQZzb/ESOxRpgtnlrbVhkdhDiE3z2oLLJ0oH+DBX9qY
      v68pOjV7nFJ9mS/lOnWmiq/jeOvvAEbAIBFYSfZbf/IH9Qj7k4+Smr64tCCF+7v45Jc2rqPZ
      ERgCz+Fo+yc5l3pm6Sim9aArPk52fpG/n7t7BsDdwHJMXrv5LXb39SwxZ223wmzxLAE9jraK
      GXpPMsKEEDw28EV2xo7eUT+zXuPFM99+R5N/JfLVFP/627/N2VtvEvX30xE+iLdR+RjPYT4z
      x2zpfEvjOGo0uPvvFtqDcRyvNVnQ9cpLwaR3gt3x/5+7946SKz3PO3/fzXUrh84ZQKMRB3GA
      yTMcDUWKIkVKtCxTu7QlywqOuz62vD72Bnl3zx579+xau/axZFm2tZJlUZIlSlqSYhpSHJIz
      nIBJwCCj0eicK1fdfPePKjS6uqoDMBxqxOc/oG7f+qrq++73fu/7vM9zkqTeQ1907+oJqtCp
      28vcWnueUm2SMfMgWa2HttxnE1ljhA8M/hw6KRaLU+96zPeLi7PfaGtK8gIbq0NK/nsniyKp
      /NC+v8HrS1/l1YUvtugDdUKXMcQXLvwWa4W9CbfuFa7v8KvP/8+M5E7z6IFTTJVeprK0zLe+
      fpWaiJCNwdR8jbFejWrdIYj20fcj7dLkAKqscKTrBK8vfndSlPvT7XTnuzAUndHkQSYL7XTp
      vUKVdB7u/xACwdHsh8nbc7u2DQokclo/zqYaiCQkevVBxlNPMF+5TMVdQ1dTpPR+eqMH6YqM
      IQmJK+uv4vo7m5a/F1gptYfJAqmpJt6K78kO4Icey7VbvJP/Cp5Y41DXYbpjWaJaFFXSkYWK
      ImmYSoKD6bN8fPzvsDS7wJ3lB/+xd0IQ+vxvf/LTzOVvocomvuNQK9UoW4J4QqO7N8nqSglf
      SMQiCnG9czZFkQyeGf0kMS3Z8fX7wXBynInszjvkk0MfJ6nndrxmewgeGfghJOEzX7lI3prm
      SOY5Yh0yI3ehShGOZp4jIrWfdUICHGeNLjXHmDnBWGSC47kfpMfcv7FTlev3IwMPqprioeFn
      GM6MM941zljvefoSA5ya+DRHM9vTurfCDyTi+uZ4X5A2R9GVdin893QHCAmpuuu8tfo5Vuq3
      W8IIQ5MwtThZY4yJ1DOEgYPtLBM3+plcmuSPL/zqezk0irVV/uUX/y7/4GP/gkL2Dv0Hhznx
      2CEiWuszwVBSDCTO4PkWtU0qywIJU81guYs8N/oR/uTG7z5wqs9U43x84qeQhdOxgg2NYlwm
      MsgnDv5Nfu/Kv7xvF5wD6cPIcoELS59psXiNqhmyxghVd52Ss0yAj6mkyOiDHEg9QRh4TNbb
      6dLQaD5XReNs4gdWIyu3iXB2v0mPwe4zGEaWR9Mx5p0Uvj1H3/6fZ3Lh1fsK/wSCgeQ5SvYs
      67VJAkIkOYLjV9CVGJtDt/d0AZSdFV5a/G1qHdr1oNHksWLdxF2vMmocwvdruF6VX/naP7kv
      YaQHxSu3vsz00t8lk9rPI8+0P+UkoTCWanSbRdU0nl9FklQiapYgcKm7q1juOqYs8fTwB3lh
      +vkdm9w7wVRj/JVjf4ec2UcQ+sT1Psod9PoTeh+y0OiODvFfHf3v+PytX2ehsru+kiYbHMmd
      QlOqlJzW+4YEVN1VbK/MsdxHSRtDFK1ZFstv4vkWU+tfI2WMoEid+UnZ6DiOW8TzLTQ1zp3C
      t7D8Epoco8s8SMrsLEOzHZYKkzx78Bm++uavIwnwlCzX3vi/6UofYr68t8wTQMxI4QRVZitv
      Umlyv1atWwgkemPHGEo8vMEMlX/pl37pl+5rlFvgOA6a1qHdMHB5bfm/UHR2T1tafgU3dEmp
      3dxcus4fvvrr72ZI94VCbZW/8vA/IQx96l6h+dQSxNQuDqSfJa71Mpv/DlVnGUFDHXowdZ6i
      dWcThz6kPz7K4a4nuF24iu3vJBN4DwPxMX7y2N+jPz4KNOgeSWOwKQtSaO+7HgAAIABJREFU
      BEIkoZDQ+8ma+1FlgzAMWatcpMdIkjVyuKGg6pbZSsU2lTjHuh7nubFPUfNvt9G8NyPAp+Qs
      ktEHmSm+tNGmGRJS9/IYSmqjPnIXcb2P/sRpEpEhQhGyUHkbyy/iBzaOXyZv3UGRdL741u/t
      mXLhugXemPo6RatIoV6kVF2g7tZZLc9g+3tX1j6z7wPEkm4Hc5CQirNEEPqkjAEaIlzvEZZq
      N1jdWj7fAXlnkWO5j/Dqi7/5Xg2pI16f+hrLxXlGM4/TG3uI6eJL1Nx1gtBnpakVulk1Ighd
      bK+EKpst5DhNjtEdH+MXzvwPvLX0Mq8vvMBKrf1JLgsJQ9UZTA4zkjrAVPkN8s4cPeYoCS2L
      IumMph5nKHEON6jjehUWSm+wWHoDVY6S0Ac2mtO7IhlO9n0EN/S5svpn1Nw1hBBkjCEO5Z5B
      V2Ks1G5S3cUlBqDm5bldfBE6TVYRsi/7AQr1aepuQxKyKzqBEDJB6G+TJQup+3N0J/qZz0/t
      5af4rqErneqo9HEXC5WL9EaPoivx92YBhGHIfO0ebWAvCPCZLl3cqOJ+r+AHHq9MfokfTv4U
      N9a+3PKkXK9XKFgzmFIMwV3fXpkg8IioGTy/jhfYSJLKmjXJXOVNALrMDH/txH+D7QcsV2ep
      OEW8wGGueoWiM48XOpS8WS6u3pNXUSWDkcRRTnf/IGnjHhdorXJ144ns+tUWZQaBhO1XmCm/
      hiQqxLRGlsP2l7i29kUOZJ6luA3BrxOq7hpROd72/2EYYKpZSvYsllcgJKDiLJDQB8lGx7eX
      KREBx4bPfE8XgKYYDHUNAyGB71Oru1SLNeJJk5nJRUYPDaJrCkV7nm5l4r3bASpbGiesUpW1
      gkc8puLbLjXHx626DB3u2XAQubX6OivluQ53e29xcebbnD5wsmOYEIQeTujQFWl48ApgsfQG
      EGJqObrjD3Er/7WWGLniLDFV+AYHsx8mZ56lZK/y9Zn/xJq9vfy3G1jcLFxgtnyVJwZ+nP2p
      0wghEFu6mFTZxG9KieRih5kpv94Ml1pheUVu57+FdB91igbDtt1lLa73U7bnWa22HtBL9myb
      5tFWPHv4x/nyW9+7YtipkWdIR3NU3RXy07P8xm9f4uh+HUtOoYcVVsvw+OOjGw+V71kdYPbq
      IldvFMmkDMrTC5gjA6xMr0MyyehAo3K5kL+zLb/nvcT02rUdn5ROUCMbO4wqGczkX+TuBKk7
      eZbCSx0PiF5gsVK9Ssac4EtTv86atbeFbflV/mzmPyOExL7kSTLmAeruOp5fRxJqS0N+0ZrZ
      MbypuqtExfYUiq3ImQeISFGWK5c3lODieh9d0UMsljsrVjheBUNOdHSqVKUIx0c/wqG+M1xd
      uH9zxPuFQPCJMz9PVI1RdVfQYjGOHeunfyTG2nyF9MAYMbNxXjWbelDv2QKIKukWs+jcYJox
      xUQLbXK942SGcyRiKt25ewfoWn3vgrl3Md77CCE1As9GyAaTS/fXswqQry61VQ63oqFjKYio
      aaxmGKLKJnYHSfC7qLqrXF+4uufJfxde6PDtuT+gKzKE75eRkIioGVTZbFkAFXuRncPMkKia
      RbbUlr7ZTpCEQi6yD1UyKDqL5K2phveCKxCVNxBhQEi4EQrehSyp5KLj3Cm8tEU+UZA2xnD8
      Mn/1yX/KP/39v/SeP9xODD/JmbFnsLwCK7XrxLuyfOgTzTrHqXvXmWqWuNbUjHovBiKEoNec
      YLZ6ibs/UKo/Q2oLFynXdc/HSSCR0Yfv+71Guh7n0EA31fICCxWXj575m3z7zV/mtfm9F9G8
      Zkzv2p0nqiIZ6HIMx6/i4GDjIBB0R/eTt25va0Wat1e4eR8uNZtR84q8vvQFBvQMIUFTpLf1
      55IkjV0auohrXQzHz3C7dK9fuhOG4qcJw4C3V/6wpTrsOhYVZxlVMjCEiby1sTzwWCtdJion
      UJR4o4tNSNhOkVJ9mlJ9muFcP88d/Qm+cul37vdr2DMimsmPnvvLTK59uWlwkqPsrrQ9DHU5
      znj62Y3e4PdsB+iLTtBd2c/yDqrMmzEcP4GW2F3NdyuWitdw/ElCt07d9ai6qyyU769xO6LG
      6I+foO7mcbf0BktCZTBxltXaDaZLr7Y0W9zIP09UzSKQ2rIgQsisWksPbAsLsFC5SZ92ZoPG
      a2gZql6euldAkQx6Y0epFysdjSmgkZmKa72kjVEQEguVS22hiiHH6Y0eZSD2EJfXPrctNcIN
      LBDQZYw1wzGFhDFI1ZprfPYQElov2dgES+VLWPa9w3rZnuenn/5FVspzvHnn/gmRu8HU4nzq
      8Z+hK5lufN/N3XogdhInqG+YeEeUFL3Ro6ibCHHv2QJQJJ2z3Z/klaXfZXUXL9mB6DEeyv4w
      qtVu9bMbLk5/7gFHeA9D2XFiWjeHu36Y+fJblOx5gsBBk6OMpB7HD12urn2h7e9CAiruCkl9
      AN+3Ng7RmhyjN36Sy/nfelfjKrp5QjmOKWsU3CUurn+pJeOyZN8hpmY6LkBFMtiXehJFirBa
      n8HxwVAG8EMdVZLIRgZJan1kjGEU2WChcmnXdKkbWiiyifA9gsBDESoxvZ9i/Q6KZBDVG4zS
      TuGkLPn84kf/d/6vL/wiF25/8119L5sRM1L8Tz/6m8Sj1hYfghDCkH3pp7b9W3iPD8GabHK+
      51NcK3yDO+U32tJluhyjWxsiLWeYK3yHpJnAUKNY7v2fBd4NDvefa443ykjyUYr1KZbKlyAM
      WK9ex2FnQpfr1zmc+yjLlUuU6jNoUgwJGaetjxhe/P23GH14lPpaBWulymLRYeLhXhAS1prD
      2Jl7vroAoWTgyRKL5dttk9wPHYrOIoYc23gyA0S1HDnzILdL73Bp9deouHlawx9BTL3O0exT
      ZCKjCEQjjKuW+L3fv8jp86Osza4Q68kR4nLzlRmGRhOIvkFiD00SkxqcmlJ9hqHsk4Syypo1
      zdXiCyhCw5TjzdNC4z1lSadYvwOE/Mwzf5uB9H4+98ZvvWvb2NHcYf7xx/49E32nuL32tbbc
      f0TdnaP1ni4AgUCTIxzLfIh9ifOsWXeoenkEgpiaQ0NmrXIFxyvhAGG4ynBuH9cX2l1Y3kuc
      HHmm5d+NdF9jstWcFeo7HHShER7YXpFSfQYIcfwyS6XOahGSrrH42nVm8woJTSV1IM7NV2Yw
      UiqKSCFtySqWnCXmq1M7KqfdraQf7foYQkhU3SJfvfMfWN7Wiiqk4uZ5efGPmSy+wXMjf70R
      E4ch8Uycb/3By4yfH+Wti8sMZn3iuSRLU0scPDTekC0PG6nSQMArS7/TcYdXhEZ/ZIKR+Gn8
      wNoQ2VJkmZ9+6h/x+MEf419/+R88UKO8Kut85MRf42ee+WckIo1sTk/8IeaKr2xk5KJaN6nI
      9uzajXHe97s/AIQQRNU00S2uMDP5l7ZcBw/ve+J7ugD60/s5MnBux2tUOYLjbd8AoslmG1UA
      AnTZbLOC2nckhxQfIbtcItMXo7hmMzycwJdkIrrWxrCvuPO7ZnAAlus3GfXWkYXO5yf/NUWn
      s5vNVqzUp/nc5L/i0b6PgBFlbCjOydPPYhgC89IU1+d9PvjcPkJ/EFeE9MYfIiLFyFszvJ3/
      Mm7YmfbhhQ7TtYtoaoJ98Ycp1u7ghw6y0IhoWc7v38+Zn/sAX33nd/nsa7/CzaXdjfESkQxP
      TvwIn3r0HzKQPtAiAiAkBdPoo+osE1Vz9MSOIe3SRgp/TgYZdyGL9gF+6KFP8ycXPkPZuj8q
      7YPiIyd+CkM1G0oK+IRhSCZ6kNXyO4QEmGqOZHQfV9f+lO2yKDlzHFPLoUiRDd3QhNFPX6xM
      cb11InYfaBDEcj0N8l08t31jvSGbQOvkL62UqAfQ09NK7Q1Cj7w1y5X1C3ue/HdRdta4tPoS
      fdEch07dmxLpZ05szh4SU7tJ6YOEhFxf+b1tJ/9m3Cy+SEYfoi95hrXqdWJ67wYtWZE1PvzQ
      p/ngsZ9kZv06L978Q64tvcpKaR4CGVNNk472MJo7RF+mh1wiTkSLIsll/NBBEXpDMr/yNguV
      ixtngJKzQNGZZ1/qKQw11Za63Yw/1wWQiY5TthfuVeUknZ7EOJ969B/ya1//p+/5+2djfXzs
      zN/gev4l7pTfpmgv4oYOmmQQVzMMx47Sl3oYWagMJc4yU3qNrYsgpQ/jhXBp7WtUnGVst0hS
      76E/MsJBOcn1/KsPHOsOxA8CjYN16Dl88be/Q6Uukx2NU+iJM319lZV1h0/+/OPoEkyXL3Kn
      9GC753z1JvtTJwhCv2NF3JCTHEw/iyypTJUuUHb3ushCrhb+jAOREw0ZG7eAIkda+nNtv0g5
      vM7wYIqhweeAprGIMcL+1JO4fo2Z/IuNHgS/glOvEIQeA8mHWatPMlduVOY3o+auMVl4gYns
      D7X5y23Gn+sC0JUEY9kPULbmsbwCVWeZmfyLnNp3hIG3Rplbn3rP3lsSEj/6yM/xwsJ/pLwl
      ++EFNjWvyFL9NpPlt3i871P0Ro8TVbtZqV3D9koosoHtO9wovUXZfb7l71eceW5XLjGaOMVA
      bJyZ8v039hhyjJNdH+Ty+ufwfYfAtihVfFzHxwskpt6eJTfWha+5G+eGpQeQn9+MucokTwx8
      krnymxTsGbzARhYqaWOEofjpDduihdqV+7pvyVmiKM+jCR0Isd3ixgKwvCLvrH4ey29Nv4YE
      rFu3sdfKZLXBtjNQxVnCC2yWq1fYbmeuuWuU7HkykdFtx/bnugCEEGhKjEz0AHfWX9jImSsy
      /Oyzv8g//+NfxHK318N5Nzh54HGUtEXZ3bmxZM2a4cvT/4YfHP5bJPVeEnovYRhyvfBtLue/
      vu3h1A9dbhVfQZfjmEp8W4nITpCEwiP9HycXGSKp9bFcv4EcTfATf/sD2/6NQKK2wzllL1iq
      3UaVIuxPPcVK/Trzlbdx/CoFexY/dBiMnSKq5Si36KuGzN9YYXmlgmkaZHsivP3aAg8/OUY0
      FWkGHyFC0hGhhCQpmHoXdzWZp0uvtU3+zai6q4SBhyFaG/0FgiD0dqR5A03rqNFtX/+e26R2
      QkjYliId65rgl37sM2g7Cdw8II4Nn+fhE48RsLcileVXeGHuN3GbPP/56hXeXPnCnjTtbb9M
      0kiQ7SDJ0QmaZPDkwI8zkT6HEILhxJldXU4AElof7jaHyCvfnqJWdSksVbCrNuV8nRtvtPdp
      2F4V269xu/htbuS/RtVdxQ3q2H6J1fpN3l75LKu1m2x+4vqWzdxckflLc7z1/CW+9uVZ3FqV
      61dbd9WY0YesRLCCGtOFl1gsv4XjV9oV5zYhcF1sN8AJ6m2kwFRkFEXSd7dA6mCN1fL6jq9+
      jyCQiGrdLTwXVTaZGBjk73/kn/PLf/qPsd3vjgbn04d+jGce/ggL1v1t4wVnkZvFVziYepQ3
      V/50z4YOAHW/wKnuHyFfX+Hq+newOjgqSkJhIHaQsz0/RLc5AoQU69N4Xol+8xBz1XsyJlsR
      VbOMp5/m4mpnwtnqbJH81DKL69A7nKBcD8ik2ydGSMhq/RYL1c7niACPm4U/Q5MiG2Z1kq6R
      imskz49ilWyMbIpoVELXFJq9RQAN69XmDh+ELmu1G9h+pZk9gzuXp5icXEcxoyRUj1DTWb85
      RfaRxzh9wKA/cZayPY8f2PiBg+WusVy+iKlkWjzHWr9Tddt+7rt4fywAIehNnECVTSy3QM1b
      p2BPU7CnGenp4R99/H/lP73w77j9LprkdSXCX33yv+cnHvlv+ePb/+KB7nGz+ApxLXcfB8B7
      mCm/xZHEWbLKs4RKnHV7ibX6DHW/QESJMZp4iH3JsxhKHIFgpXyZ9aYzu4xgLPEwM5W3WzyV
      JSGTVHs4kHoSU82gyRHqXnvKNNcXI5LtxVyskuqJUrNDTL09M6JKRrMJaHv4oYu8qT9XCInx
      Mzs7skfkeMdGm5qzgiQk/NBnZbpANGlQrrvcvjnHWsFiZCTT/JwKMb2bVGSIfG2SpfJbuH7D
      lVOW9G3YqIK+2HEiys6G7N8Ti6T7geUWuLH2pbb/16QUl6au8zvf+T9ZKu6900yRNR4b/2F+
      5ul/xr7u46xZs3xh6pfbrvNsFxQFRd4+ZSYLhbHESe6U39z2Gs/1kRSZwPNR1Hvbti5FOBY/
      iwBMc5DblTdYt6Zb5MkVoTEQO87h9A8wl3+xRdw3FRnD9quU3WUMrcFwrFmLCBrxcETN8Pb6
      ayzV79+P4S66zRH6o1lcr8LlN2YpFsr09ydREwmWby+S7UshGxEOjR1ixZqm6rXbpnbCkfRz
      2NZS264pSzpWWKfiruDaLghBGIJrO8iqgms5GPEoPbExjmR/GCEEs/mXWgxOBBL9qfMsVi5S
      ddcICRoMg+gRspF9O9ojwftkB9iM6jY5bJ86nzj7C3zs9M/ywtU/4htX/4CLMy+yVmnn8etK
      hIO9p3jkwEd4+vCPMZy9pwtZ72iLGvLtz7yJ2p8ml9bR4xEqqxX6j/SRTt9rKAlCn3yHhvXZ
      y3P4WoTizCqlkkOiJ8nqYoVnP3FPfMoJbKLGAAV7hqtrf9Kxed4LHe6UL7BmTTGstwrPlqxZ
      gtBFAWTfxQu9DapBSMPfLKnGWHoXkeJ46iw1dwp/fY35lTqB4/HS85fIZCIsLVVxifHJv/c0
      qmRwuvuTvLTwm3gdlJg3YyxxjrHEeW57X29r3IlpPXTrXVxZ+xLqpr4dTW9MSyOiIQuVwfjp
      jd9PU2JsZqYIIVOsTYLvklS66U2eQlcSO5pjb8b7bgHIHcSLgOZhR1B2SpiJLEcnnqVr4BBL
      pWkq9TxRNc6+zCHODT3LePdJdDXSUUqjU/ENBLn9XZSrFpOvLWEkIywv1VEzqZYFAAJNapcd
      XFmskMr6OAHM3sjTjUIk0v4DKGqc2/mLuypHVNw1psNrHIw9jBfYxPU+1qv3WLWWV8TrUB3u
      MrpZtJYeyI8toXVxMH2O6/kSTrbCUK9FprcPeyKHHIvSP7tOLJ0gKgsiShLPK3MgfobblTc7
      uuuoUoSDqafYlzgPQjCQPMtc8TUsr4RANMy45RjV2jxZbZB1d34Lma0Zw6sHuFO4Q8VpNOQY
      ikHgu5iKiq6YRLWexvkCcP0KNXuZiLpz2LMZ77sFkND7UeVom4kFxPndS/+Wq6tvthqryYJo
      rBErTlZvMX9znjO1O3xg7OOYapStiGu5jnLtB04PEIQhwbkhUDXscp14V2t/rCrp9EUPtjX7
      HzozRKhqJLqqHDk/gu94+FueQLpscqdyYdcn5l1UvHUCxWAs/hhhGFJ1lrHcRnVcEmqzQaU1
      rpaFwlMDn+KLd35tw7t3L5CFwrHUaebWX0RDRQiZQyebcX1vQ8+0f6DxHQskyvVZyjQmXZ82
      DJKKrMapeyVcv4IUQkYfIKV2EYQ+slCRmwJoEhKypBLXeshXbxESoCBxMPUBSu4iFWeVIPSZ
      Lc0wW5xmvf5ax8N/Uk9zqvdpjkVzGxwsaJxJ/MBtMQLc8bO/V7IoDwohGqpejl8lCB1kyWCh
      UuLz1z/PYmVmV/EpL/CYKd7izcUX6U+Mko60Kqkpks589Rq1LduxosqomowW0dA0mUhcR97C
      TBuMHWUi/Ti3iq+0/CiqoaKqEmbcQNUU9IiGEWl9tgzEjrJi3biv7JEXuAzFHmq2RFr4gUNE
      zdKbPIUXWthbagsRNYkKRGWTFWuBYA/vpUkGT/T/GGpoE4QeIgyJaj3UvAJbC0yqZBKTU2zu
      whFCIAgYTTxCVIlj2SvIQuD6VUr2LFVnmYQ+yFzhlY2G/jD0qTorCCE1zzASuegE3dFDSCT4
      +u0vcSt/i/oOdQ3bt5gqXuVW/gp98VFiagJF0qg5qxTqt5GEjK6kdl0E77sFAKBIGkljmIx5
      gBvr03x18gv490knsH2LS8uv0h8fIRPpBtFQN/ACC1U2mKm8c1/3k5A53/tjpPReqm6eQoez
      wHZQJZ1DmSeYr917z2uvzxBTfKZXfCKaIPQDKksF1usQi6oI0ahId+kjzBdfw/LyCCHoS5wG
      Qjy/huPXkISMLHRiWje2W8Txy2hCptccAkmn7GylQjcgEKS1LCeyjxBX4xtU6sZ4DRQUBDKG
      kiSiJOk2J9iXeoKiNb1Nk0/ISu16267kBjX8wMZqei9vRsIYRJY0UuYoMaOX+fJtfuedX6Zg
      7T3LVveqTBUmmeh6HEW4uH6FMPSxvCLJyPCuZ4H3XQh0F0IIbqy+wxdv/N4DSw46vs1nLv0q
      f+vc/0hKTzFfeo26m0eRdHojoyzWp/Z8r5HYIcq1WxQqV+jR+lhRs1T2oLcD8FD2Q0SU1nDq
      1lszLF7yWbQNSitVJo4kyGZiXLxZ5cd/+hQyjUN30ZremFR+4LBSuUTNWd2YTFGtl/7kWar2
      EvVmAkEIgSFUPjz68+TtJe6ULrFau0PVXcdU03SZI6i4iNBGhDZFawaBRFzrQSAa2j9IRKUY
      Q6nHiTSzTmEYoEh6RxEA26+0xfB3UXVXkIWyZeEIsrEJ9Ob3UrTW+d3L/4qau/eK+V04gc1n
      r/47nhv5AFFFbd69sbfshvftAqi7Vf7o6v9730/+rbC8Gp+98ht8bPyj1JxGq6Tr1xiLTqDJ
      MaYrl3a5g2As/hAZOYrdDJs8p86R5HluVS6xZm2fdpSFykhkHOEWKW7R8uzuT2DGdORySH9/
      gmRGoGgmR4+buH6IrAgMJYEmR6lzr8Wz7uZbnqQ1Z5kg9BqsRyFvdGMZahpJyOQigyS1NHN5
      Dcevosom2dghZgovtewLIQEBPlE1R33Twq7YiyxV3sEPLKJaD+nIfha2kM90JUFc723zX773
      DQp64sdZKL2xIS6Qa37/AEEY8OXJzzzQ5L8L27d4ZeECHx77MCE+qmwyX3wNScikzX1E1Oyf
      j0PMg+I7s89Tsr87lOjb+atM5kfJGPcyOBIS53o+QVSJc6v0Bk6Hp1pczXKi60Mk5DhL5dYG
      F9+v8fTAT3F17WtMld+itomTokoRhmJHGYufpFC5Rhj6hIGHLpkbGZOzHzq267i7I/vJRSdw
      vSp1L4+pZpEklbJ1T20DIXD9GiV7HiEp+L5HQu+nO358IwdesZc3qqWuX6VQn+p4sHT8Gn2J
      IeruOo5XQZGNFrKZ5RWJ6/0MJs+xXruJG1iokklv/DgCiUUutoVA0GhOSRhDRLQsK5Ur1J1V
      bK9E2V4gYfQzW7rJ9bUHEw/YjJX6MrXQpMuIs1x5Z2PcZXuR4fRjmFq7svb7cgG4vsMrc9/4
      rt7z6uoNnhg63dymBbKkMr3+TaJIPJQ4i1DiBEKm4q7i+zW6IqOMps4jSxplq1O8HzK9/k2U
      wGZ/9BCKZJKLH8ZQUkSUhru6H1hUalN4gYUkqexPPMrlwvMd7tUOWWjsS5xHkSIkjEFqpVUq
      9iKqbCJthBMCXUkxmf/6BqUAoOjMkwnGN5q/NdnknuCVIKp1U7aX2iarrsTR5DhD6ccJQo/F
      0puwReCsbM/TE38I17CZK79OyV1izb6NISfQlHhzl7y3uAwlSU/sOEIIqvYyhXpDHMz2y5Ts
      WfoTZ3l76cX7lrLZDhfmv84jfQ+1jCEIXfK12x0XwPuCDLcVq7VFSt/lhpip4jR9iXP0xB9i
      IHkOz7c2xaQhcuAyHDtMSoqQkmO4zipzhVcJAg9DSWIo9+yN7hKw7j5VBeAHNRw3j6kkCUKX
      lfp1bpdepkoVB490bJz9qccZiO7+5AfB0cwHMZU0XlBnqfz2Rtjj+jViej+DqccYTj+J5Zda
      Jn9jXFXmShcIw4AwDJAkDUPLIssRcrHDpM39ZKPjbI6RJaERNwapew2jcUmo25poL1TeYqr4
      rRYFDcsvUXaXSRpDxPV+FGGQ1IfYl3kWTTYJw4C12vW2e61WrzFZuLyH72RvWKhMd3TU3K4n
      4325A8yVdu6BfRB4gUvJqTKQ2IcfOG3FqCB0Wa/e2KT43IivV8qXqNpLhISkI2NEtCwRNdPW
      zglguUVKziLX889T3fLkzK8vMJI8z8ncj6BJJlPl1zp+RkXoDETGkbw6S6U3MLRsW9bF9avE
      9B6qzmpbKnRj7O4ada/AcvUK+U3eDE5oo6spemJHiWo5CtYMq/VJKu4C8yu3IAxR5Qi5yD4y
      WjuRTJI0VmrbSd2EFJ0FsuoggTDw3Cq2W0KTo4SE+B1qE5ZXoebuTfq8XrKJxBQsK8QwO09d
      268TCgPYvAgECWOg4/XvywWwa+wfhlhlG8VQcS0PNaIQ+gFCllr4N1tRthuqAZJQiWndFDex
      T81mgWwrKvbixsHS8y2SxhBB6KErMZwtXPSQkHdWP9dRp8cLbSYL30RC4lj2w+S0Aebr16h6
      BZyghiI0+qKHSSldFGu3mt1TeWyvjEBuCVfu7UbhtqFDGIbMl9+gtEXsq+6tc/tup5QcZb52
      jeIW3wDbrzBXeZsV6RZ9kQOEvk1AcyfUspTLq3hWhZe+NcPx08MYhoxrWSysuRwch2q40jQ1
      D7DdAnGjr8n47Wr5zhufQCPYhY62PrXGwlwNp1QlooHI9jJxcnvDwbgxgkqVsj2PJFSy0fG/
      WAtg13jQcbj0jTv4xSp1VyI7lmTl+jr7Hx9j5Oj2Vjp3M0ohPjGjH9uvNJSPtRy56EEsr0Bl
      U2ysKwliWk9T0gP80ObW2lc2OqWkTak9XUlS8QvbilTd/Vx3Sq+iiwi1+hwZkWIi+yQrlSu4
      fg0tELhbuEp+6NAdP9LQ6wx9DDVN1OjF8krNmN3EaauagyIbVJylzl+fX2G9Psls9XLb5G+5
      LqiyZE1yuvvH0eUoimSwWm+oOHhOhel3Znn9m28yfGgIu2bRNTbCwfEuIloW1y0TIij7VQqF
      V5GETETJoCnFDb8xU80RNw4gaNdc2ozyWg2rZOFWbDBVortkN12vjBcWCMIAIYJmLaDzH70v
      F0BUbfdyaoEsM3S8F69YoVLxSXcZqJpKdnhnHZiYlsDxq8wUXt4rdqdqAAAgAElEQVRI9SmS
      QZd+GFnSEEjEjF483yKqdZEyR5ElnYjWSA2ubHKK97FRpAgDiVNIkooqR3l96TMb72XVHYxI
      a4HQqjsQgWJTMzUkZK16fWMnsb0i/hauUUTNkDYPEDP6uVV4gXnrOjP1RkFNl2PElVybMJYs
      dLKR/cxXtmetLlWvsraLYBmA5ZeZrbzJoUyjV9dUGg8YLZrg0IlBytUUkVQCSUAk3jiga3oP
      NyvXWKxNYm9itAoEUTXFSPwohzNPEte68QIHpZm92g7DpwcZDEIkIQiCEGmrdswmSEhU7Dvo
      ciMS8AObxfLbGGq6I0fofbkAumO7dE8pCj2jSeDehO8+uP3l0OC75MwelsoXW/LcXmAxX3qd
      rHmAtco1QoKGUKw2gSo3lRuMvmaOu3Vn8oI6ihzBVLPNw2Mjxr3yynVuTa6TSZtke5LML5Tp
      ykW4cWONH/3Jc8hKlFz0CLKksVJpbczRlSQxfYKqvYCmJMhExwG4XXyJlS0yk7ZfxvbLxNVu
      0tpw41AahuhyFElIzYXR+fBX9TpXiDthpT7JeOAhCRlTzZDUByjac5x5ptVqNQxDql6d56f/
      I04Hz4CwqUf0zvq3WKhO8uTAT5IxBuiKDjJb2l5CUwiB3KSpb6WnbEVcj6NKrbmdMPSpu+t/
      cRbAYHyUmJak4ty/Vuh2GErux1Ai1DowJV2/znr15sZTNAg9ivVpolpPgx8jxLbSGuuV6yx6
      VXQthWgm1dZWKihunbcurDI0mmH69hrlA/1EjEaVUpUixIw+wjAkZY5SL+UJQx9JKKTNMWJ6
      L2nznqjTUu0aSzs0opfdZXpjx+jRjjC9/k3qfp2as4IsZLxOMoVCJxR71yx1/Bo1d5V87RaW
      W0SVDSJykvqWXl7Ld7hdubUnFYx1e56vzvw6Hxr5BY53n99xAdwPDmZOIEtKmzyjKnVurX1f
      LgBNMTjWfZbvzO4tZ74XnOl/EiFER26IQKBIOo7fWsqfK73a9AaTMJQkW80jVKnRwQYhdXul
      Qe/11nn4A0fwQoknPA/NULEsD02V8PxGF1ei2aYnhCCuD6CmTVaq1yg5y0wWX0KRdNLGMN3m
      BJJQmK90VpnbjPnK2yjRe+MTCCJSglCWW84CimQwlDjPzdJLWyWHtoVAMF98bSND5gV1TCXJ
      UPIRqu4KAoEXhrwwt3c/MICqW+ClhT/gqYFP8+LMFyna90/j3gxN1nl06KNU7Tvka7e5+13E
      9F6iWmefhPflAgB4auSHeGPh23s2nNsJXWYfx3sebpbFx1jcUtWNat30xI+yWHoT16+iKQnq
      XqFFa9LxK5hqDgiwvTKypDGQPMd65TqWm0dXEgzpo1zLfxXdNGh0ETTOAJp+rwcha+wnprYW
      ZBarV5v2SvcW17p1m8XqJcbTz1FvjqNeKFNyJLxSkXhPhqXpdQr5Mg8/MYHllZC2NICbWo6+
      xGlKzgIVe4myPYeMQtmaxZDaqeLbQZNNPN9qoRLYXglTSZMyBgnDkBfmfrtj2LMbFqo3Wa1P
      8ezYX+KzV//tff/9Zjzc9ySF2pUNykdU62p4ARgDSFLnqf6+LIQBJI0sP7DvE+/6PrKQ+dih
      T6PJOiDImAfojZ9AlcyN1NxA8iyGmmYk8xRj2R+gO368xQDvLtygTsoYRSDh+zZzhVdIRkbI
      xY/ghy7V+hxprX8jFNoKU0kTk5PMFV6hWJ8lDAMWq5eZq7QLO0HDs+v6+lc2jCUuvn4Hp1bg
      1pVV/r//50us5UtcunK33hASN/pIRkYQQsbUuuiJH0eSGi6Tnl8lDFy8oE7FXiD0qkjspWtK
      MBg70dZaKJCRm4JTll9htvKgxayQW8ULHMmd5eH+H3jAe8Ch7Al6TZOyvYDtlRoCWn6VRGQI
      eQeJxPftAhBC8NjwD3Ky97EHvweCDx34y+xPH97QoRFISELGCy0CPCrOEnOl1wgCD0kojYNv
      2Dm/HgQuq9WrG/GlH9isVq9StZdx/Qp+YGGKKBPp50hqAyiS0ZANV3MMxx8mKWep2cuU7QXm
      ixcoWrPMlV/f8TPUvPWNVOv+g91YrkauW+fJTz2K8CWeeuYA0FC2ztcmydencAOLmrtOxVkm
      DEMcr0x9y9lHRiZn7G5IktGHyOgDbXn0XOzQxsQq2Es4fuvTPww7J7M7taCvW3N4ocNTwz/E
      6Z5Hdh3TVpzoeZynhj9IELYW2mrOKs4uekzv2xAIGuptnzzy14lpcb49/ZX7qg4rksIjg+fp
      i2tM5r9OXO8jE9mP61eZL11omeBle56lykX64qcQQjTz6+2FLkNJtn2hfuAQyvfGFRLieWVM
      DHS5B1PLMZh8mLq7zqy1WVAqYK16Y0PNoJov887bM2R7M7jFImRyjPTFMEwdXYlh+SWyg900
      iMkNfdHhfffiWlNOslK9d1B2gxrzpQvoTV7SVgghGIqdJGkMcbv0chudQiDRFdlPXMRYLF5A
      CJmu6GFkWSeipDE2ZVTqXqntgfHGV24QS+gYcYO1NYv+oRjlasDC5Tkmzo2SGExiKI1x2X6N
      pfJFqtYc+xI5osqjXM3fYaW2s8NlJtLD0yMf52jXOdZrt3a8dju8LxtiNkMSEgcyx+hPjLBQ
      nqa2i5KbQNAfH+bx4ROkTRXbL2H7JUr2PFV3hSDoZKDcmMhZ8wAhPo5fQZOjWF5xg3Rmqo1Q
      yfZKLe2aMb2PXOwQtltECAlJ0qg6y830Y4jrVwkIMNQUxS2KDaocpew1FsWrL1yhuprn8neu
      4upJyusFZubL7NvfRW/0CKpkNlXO2pExxogpyTZ9nJAATYkR1/uou2st41Ylk+7EMbLGGN2R
      A2iyiSxpGHKcqJJiKHaC/uhhyht07xBNNumKNxxWNp8HivYyt0utNYeFa7PUXJXZ1ybRenJc
      f3Uaq+ahyAFTN0pMnOzZuIciFDJKrJG6FYKYZnJ+8KNkjSwCH0XSCQFV1ojrKUZTB3l6+ON8
      cN9P0Btr7GKy0ClZcy20kZjWTSZ6YEdliPf1DnAXQggOd51iPHuca6tv8c7yBWZLk5TsAl7g
      osk6aSPHUHI/x7rPYmoei5V2V8OKs4Trda7UCkQjHCq+uiFHYqpZelMnUKUIhprCD1wSkeEG
      j6hZQc7GJlAknaHME4RhwHThxbZ7V+1lumNHSBiDlJpUZlU26YkfZ8m+iRdYDA6mWDYjdA3m
      yI30szw9h0UMIZo+X4mz3CworNZvbfzIstDoMScYSz7OfOm1bT+X7Vcw9R4sv4IIQyJqmq7Y
      YVTZbHg1aDliWq6htFy6QMmao24v4Hullh4DTelcoIxp7TZRE49NUC1UiZzpQWgqR46nqNZD
      dMllftZG2rSAImoCRWgtNYtKfYaE4nO66zApc4xYZJC58hsN957QxwmnWK3rdEePIDdD1+H0
      YyyU3sQPHGJ6N13Rw7t2hL3vdIH2gjAMCcIAP/Qa2vBCoEgqkpAIwoDra1+k5nb2CVMkAwmp
      LU+cMQ9saNhvRtIYYTB1juXKOyxXr+IFdlOHJ81Q8jzmlkaL2cLLG5P8LiJqhqH0E9h+hXx9
      hiB0yURGMdUU06VXmS23K7p5rocky5hqkpM9P4EiaYRhiBdYrNUnWapexg8shGikaGNqV3OH
      aXWCCWWVkrN0jwYuVHKR/YwlH2vxygKwvBJ31v6sZSJnzYMEoYumxElGRjpOKDew+eNb/wcl
      5/682e7iaOZpDiZPslK+REhIwhjE9+sbPcSypFMM1jsqwOUi44ylnsD1a8wVX2mmpSFt7qM3
      3n5434q/EDvAVgghkIWM3DGLEe5oeSoLlYH4aRbKbzW1/AWZyD5MJcN62O5WUrEXWKpcYmGT
      T25Dh2eN2/kXOJj9EIpsUKrPYHnFxgLbxBHyw4AVe5VLU/+Ggr24oWihSQbZyAD7U2dIaH2U
      tnByFFVBEToHM89tyHsL0XiaL1TeuteWGELFWabqrJFqepX5odPwFPZWsFuowSF+6LBUu4Ll
      lTiS+wjKJhkaCQkhpBY7U1PvIqJmuLl+kQuL/4XV+gK2V0eTdVJGjtHUYQ6kT3AgdY7Xl3fm
      9HSCIjR6oiMsW7coBY2CoOdKxOQ0okk7rwWlbeUPV+s3SRvD5Ku3sDaFiOu1m2hyrEn73h5/
      IXeAnRCGIdPFF1mrdz4UpYwRxlJP0bAyqjYFVlWK1jQzhXaKs0AmEGHHPliAvvgJCIKNRg+A
      mN6PKpss16e4nH+NyjbOi3fRa+5nf/IIlreG07RD1eUoETlBGAZosknWHCeqdXF97UuUt2k9
      VKQIR7t+BIHEVOk7LFZ3bvwfTpxnOH6aQv0OZWseRY4AYYMBS0hM62PFqvLt2S9QsrdXgdNk
      g1O9T7Lu3qB0n+YcfeYICdXo0Hsg6IocYCh+mitrf9q2MxOGrCwX6epJkdT68b0aW1PJUa2b
      0czTO77/X8gdYCcIIeiOHqVoz7VNWlno9ESPNkMWsdGQDQ2VMllobV+0ribbuP2bUbGXCbYU
      6yw3j1ASvL3+ckch3K1YrN2i7pX44MjPElPT1NxV7uRfpOo3Dsg1t9HWN5Q8v+NYvKBOzc0T
      07pY3yC6hdiWi6qpbSSy1dp1onKSlfK99kFNjjGcfgI3cPnS5Ge4sb57FdrxLV6e+woxLUbc
      VAn2WGLORQaIKto2jTchK/UbKJLR3NFDXvrid7hzPY8X0SlUXAa64nziv358W6ExqaMI2pZr
      9jTSv2AwlCT7088S1/qQhYYsNAwlxWDiLIbamUeuyAZD6cdQJXPj/2JaL4PJh9ukuTdDlY22
      NKPl1/jm3Gf2NPnvouis8M25zxCEPovliy1+xNCgRS9U3trVbd0PHVy/viHlbhVX+ZX/5Qu8
      +I0rvP7qFJdfvsbsfJN92uwP3vzkdPwKda/MH13/D3ua/JtRcSrkK3Xiahc7KTIoQuNY9gOM
      xQ8ixM4ByGr9VjOOF+CG+IkEx472cvrcfvoGG7+lqWZIbTHBEEhkzAO7jvn7bgeApimflmN/
      5lmWa1eZKV+gbK+zZs+iSBq5yAFGEueavbINeIFDyVnEFT4ODoaSIhMdx1CSJPUB1uuTHd5H
      JmuOU1dWWave4G7P7Vx9huouYU8nLNUmubr+LfALHV93/TqypG0bjoEgoqQaglOicdA3kjoD
      mTg3Jgsc3Wfz8sszHHxCZ7A/jiRkFMnApdJyj2/c+eMHJqdZnk3dknhm5NPcLr7JujWHHdSQ
      kIgoCVJalrH4cfriR3l79bONz2XZOIEA10XWVCS54VgphEBoNnFjkIqzxKMfe4xHt7yfJGSy
      kf3EtG40OUbZnkeWNLLmAaJa167j/b5cAHcxW36dqdLLbH7CuUGdhepFCvYMx3Mfx1AS2H6F
      q6t/Sm2T2rHj1Lm89nmGEg/TnziN7ZVawg+BTH/8JFE1h+fXMJRko0ik9XAh3zkluRfcLLzG
      gfi+jq817IrGWNxGvz9lDBNRUoSERJS7oVuUD376HIEiYWgyYweHMNONJ+ddN8XZwssbCYG6
      D9fW351L51x5kopt8ezQT+OFDn7QyEBVrNmG77KzxGLRImgmBC6/9A7XFmoUry8x/shBVlZr
      DHapRLp6OHV6iL7ocRagrcFHINEfO0Vc60UIQVfsEF2xQ/c11u/bBVCwZrmzZfJvRt0rcD3/
      PMdzH+dW/hstk/8eQmZKrxJTcxzIfpB8fYr12i0kSaYndpyY1sNy5RL5ZhVS+BK1wGuzRr0f
      FJ1VhDgCYXv4FNd7GYifIgi9LSpsgrjWS1/sJG7goEo6g/FTXF9/nhBIdd8765ixRsONhMxA
      /CSGmmYs+4ENwbDP3/rPDyxEthnfmf0iR3PnUYSGLDezOc4Kd38Pxys3GLhBjXRvllEjSZiL
      EklG6RrIsD45w+B4D7KkEdVyTOgfYqV2lbw1jR+6GHKc7ughEtrAnjRAt8P35QIIw5D56tu7
      tlYW7FlW6jfb+ma33I3F6mUMOcF67cYGSW6u8AoDqXNU7MVNVwYsb4RCWxAE3Lm6xtBEjiAI
      KMyWSI6mULf8eH7oEdUHsJ0F7E2mD5ocozf+EJKkMJw8T84cZ60+xa3CG6zUF6m41/HnvoYQ
      ElE1wUBsnKjaS91bbKOQSMiMJh8lrQ81aiiyQVzuo+IUmSo8uAnJZqzVF1iqTmNIPsX6HWRJ
      RWxKW6tKjF5tgMnitxk+PMJWVlJ5OE08rpAxRtAkEyEk+mLH6Y0eIyREIL2riX8X358LgHCL
      kdv2WK5d3XWh1Nw1ZgovtTBE3aDGbOFlIkqyJeex7YE5DLnx6h1uX7iDGtFZXfF45qcfImm0
      X6/KJsPZD5K37mB5RTTZJGWMosl3KcyC+eodvjn7B1Td9rNG3SuzWp9DIDEQH2YseaBZNBNE
      1S76okc3wobNWKsv4AZ7U6/eC26uvUJPxABC8Btp2lzsCF5goSlxhFBI6QMUOjyA4kmTiJJi
      JPHIpmKWaDYnfffwfbkAGthbeUPsgRIchkFLb8BdeEGdROQYwpJx/RpRrQuhdnOt2KEXVwj2
      nx0mqNVYX3GYOJ1B6jhEgaHEUGSDruhEh7GEvLLweV5d/OKu5MCQgNnyFHXX4Yf3/zxxLbPj
      k7No7dyQMntlhdxQAkWTcd0AVRH4oUA3Ok+jvLVAz6bsjB86CElhvXZnwyxDEgoxpQs7qGzY
      P8lCIW2MMJp8FF1+b2tM35cLQCAwlTT2HtKQPeYhqs5ye6FlExJ6H5bducBjKCnS6TGCZkuj
      as0hC6U9Ny1JjB1tsDf37zAeQ46S6KBg1kDIpdVv8sri/VVc16x5/nTy3/PJg38fVe5sQALg
      7WLcsXR1ntWZAut3yijJKKkuBd+XOPXcWMfrZclsCGxtGKFHmCtdaMliBaGLhMx46hlk2SAM
      AwwlgSHHd6UxfDfwfVkHEELQGz2663VRNUc2MsZA/OS212hSlOHkeWJab9trhpJuitI2TB+E
      EKT1HjLbaNDsBQOxCeruKrPF15grvU7ZXtzI/RftVb4999kHuu9Kfbqxa+xQ+I8oO3eJdY93
      oasyw2f62H+iG10TVCvbL5qE3kUyMoIqR0mb+4nouY4p3BCfkj1PUusnbQwRUZLfk8kP36c7
      AEAusp9u8xDLtc6HOlnojKefRQiJ/tgJgtBnrvxmCyMxoqQZTz+LLscYTJ1jtvDKhgJyRM0w
      lHq0jRwmSyoP5Z7lazO/cd96l4pQiUqCW+tf3/i/xcolspF9jKQe442l599VjH5x9Ruc7H4W
      U413fL3L7G9jdW7G0LHNah0h1ZzG0IntqfBSWKFQa9RPgsDH38GXud0R6HuD79sFIITEwfQP
      YCpp5ipvbjLiFhhSlF7zECLwm6GLzFDiLGljmIXKRfzAIWceIBPZtzHBVdmkP3mWpeplLK+A
      oWbwQgetWbDZjJHEcSbSj3I1306N3na8CPrNISR8WquoIWv1Wyiyya3C9jo/e4HjW9wuvs3R
      3OMdX89Eesiavazu0ohyd8TR7PY7hibp5IwUd89iNWeZWGRo2+t1ZWdNp/cK37cLABrNNMOJ
      s/THjlPz8viBi+WsUahNUbUW///2zu25reu6w98+94M7AZDgnRQpS6asuywljpy4dWNXmTZT
      T1o3M5m206e0r33JUx/6V7T9F1p3ppOHdsZ2ao9rx45TWYktyZaoO8WbCF5A3HFuuw+AKJIA
      SMqCJdvC9ybqcJ9zwL2w91p7rfWjVF0kGZqkL3qYxeJlFosXN/arVXcNL6iRaWyl1qp3uJV7
      f8NXyNXuslC8yGD0OIOR+hbKkzVWyjcoOkukzQR99hBLlXl2c8hVoXE49QeoQa7tt++d9U8o
      71LetxcWSjfbGoAiVI72neWd22888n2mek8Ts/opNpR0LL2HHnuc1cqNJrVIVRikQ890JKz5
      sHyrDeA+mmISM/oJpM9q8SqbJ2SuMkMgJPPbtH996TKX/wRdsQgbfdzMvdfUpFYSMFe4gK31
      YGs93Fh7d0vVVsZKYSk6K7VVSi2K7AWClD3Myd5z9NkjXM7+su07+IFHO0O68v4tkuNJfC8g
      8CS5hXXS+9L0jUSbQoZFp/58UkoKbpZ75WlK7gpCKMSMfp5NH+OThXdZr3253H4ASwtxPPMC
      gSziCYmu2MRD+9AUi/HE95krXKhXzUmJpcUYiB4npKe+9P0ehafCAB4gYZsTKAlYKrZvOrVY
      vETUHGijiwWu47FYuoSC1lSyqAiFhBFnJDpF2BjmXuU2ueoCeWcR8IkYcTL2OLoiEEJFEWrb
      ++zkFJYKDtXLC8xfXWP4+UEW7pQIfEiPRJuCvBKJF9S4vPoWc8VL21acz1CFzlTmIOdnc3jB
      3ptnbTwnClPpg8wW3sffJJmUW5ljJHqaTPgQSWuMwKugCI2B+ClsPflEvv3hKTMAgUrcHiW7
      qYWHrfdQrrZvz+345Y38+wvvfYoSDlPI5omlYpRrHouzK/z5z15qG10RQlBxl5lInMXWba54
      c0juO44OS5VplirTxIwMUS25IYW6nZQ9ATSXeQKMHs6gCEkyE+KjN+9y4k8P0ps0Wh4YWWqI
      80tvsLJN6vU+vnQp+3PsT49zffnOVknaXRAIDvVOETeVLZMf6oJ/t9frPlGxfBcpPXzpsVa6
      jp04s+d7dJqnywCEIBV+BkMLU3ZWMLUoEXOAtdpsWy0yRaj1VikuLC3lUVnj5vUskXSKUsVn
      fH96DynKHvfKV7m2yYfYTt65R9UrkDQGtkVEBCl7koHYCX698DZVr/lso3e0ntyWHE4wcnxk
      411bUfGzBNXdo1OG7vHK5GtcmP+Ye6X2Omj3iZspXh7/CUX3i00Bh61IAuaLvyeq7F3I+qvm
      qTIAqG8lYtYwMWt442cxc5C1Np2SY+YQcWuIXHWGvsEUB45NcKpcwwoZVGo+pq7UBeJqSzuc
      zAru5M/veNgG4ARlAqEymfxDik4WgULMHCRi9CKEwnjsOa6sfrzDu+28jVCEiqb67PX4p+TP
      81dHfsGV5fN8tvRrFov1FeF+eLd+YpvmSN/3ON7/EjU/x+fLF+q9iGoet68tsO+ZfkSjU7Oi
      CBwqREKHqNRW6mnLkQM8od0P8BQaQCuG489T9labusFZWpzh2Ek0xSZhjXLyfvCkkVEZitSv
      2Zf4ATdW32lbrSWEQsXfmwrKSvUWB5Mvk2jRtOpk5odcW7vQtL3YKwOREVTlwe8WchWiCbvt
      v3O1eSQ+RzNnOZo5S82vkqtmqXkV8rUZHC+LKkARJZZLlzH1eiizfG+Bf/6X80xNJbh1bZGV
      +VWK+Qrjp5/l3CvPEbWGyUSO1vN6duna8FXzte8L9DhQFaMe82+4jJpiYalR0qH9GFoEVTHp
      sccQKNS8AoEM0IRBMjTJROKlev2uniRfnWuanKYaw9ZTG0IUvutSKnn4NQdfCiqFKiAplx0M
      U0MSkLLGCevNQh+2Vo/qzBabtbZ2I272cbr/hyxXHxT2/Pati8xPZ1lcLFIq1pj9fIarv5vF
      7E0RDde/G4cjRzAbSXiaohHWY9S8e+Qq1wAfSUAgXUpuXa7JCUr4vk+54JIZT2GIgLFnhghH
      NRID/YwMphiKHkdTrcd22rsT3RWggaaYDMaO4wc1ZtY+rAtiFC+zUppmMH6KqDlEwhrB8QuU
      3RVMNUKPOYreELQI62kOps+xVLpCvjZHIAN67DEy4SnubgqxXvzwGkurLkGljKX6XJku0NcX
      xotGeO0vj2NoYodIkOBU/6sU3DUuL3+w53eL6D38ycTP8eTW09bAqZJ3NGKmweXf38OuZuk9
      MMryYpnBvnrOkKoYVN11vKCGrceRUnJvkwTpZmreOrpiI+OSH73+/Lb/recLJa3xLWWnT5qu
      AWxjrXx7i4BGIF2WCpfwAoeZ/G82JqfjFyk49+gPH2agkUtU8dZZq92l6NYLPyqlPJ50Nr5B
      AfqHElSosHhlmbHvHsCI5IikItjJMIoQCBTsFnXLEonrVyi6WQ6lTqIrgsvLH+O2EJ7bTCY0
      zNmhP8PWbBQRQRX6xir1/Z+8gAwCFFVpRIdlvb65sScPaQny5dvkynXRwnpOz8QOJZnQY46S
      dxc3OlpvJqL3MRI788RCnq341rVFeVTm1883CsUfIISCi9fyD6+gciB9joKT5UbuvZaOsKlG
      yTvLeJsK3StlBzvUvHWM6L18Z+BvGiJzdeoFPhe5kftgyxiBVKi4knytQK6W3eiHZGohBsIT
      xHSNsGY1nMx61diamyVbba5vbsV45BSqV93yToYWZb2FWs59BqLHSdr7mC9+2qjectAVi6Q1
      wUDkCLpqsVPB/OOmuwJsw9aTTQYASttvvQCf5fJ15ksX20aBqn4eQ7XxvAeTt9XkV1CZTJxt
      mvx3Cr/l5npzXpEiAsKG4ETfj+kxhrmz9hFSeqTDk1T8PKvVW5uulhScBSzFxlKjVP2d0yp6
      zGFGIkeYy22NOilCw9JiTekMUD8Ei5tDmFqUfYkXGZMegfRQhL5ri8InxZP3Qr5mxO1R4tZo
      o8e/2FN3sdXqrfq2QkqcqosfbNMSc3w0oTMUOdZWO0ARGuPx75AwBvADd+NgLe8scmv9Nzvc
      XXJ9/X1WKzfRhcBQdNYrM5v6Am3FC6ocTr7aJNKxmaQ5zP7I8wRBXQhwMzFrmOH4abRtYn4C
      hUz0MPYm510RWqNT3tdz8kN3C9QSKQNqXr5efK3FCWTA59lfNvXqqSNQVYuiu0w1O89/vHGd
      kQNJ4hETYZpQLpLN+7zyo2OczPyMXG2WmcIFik6WQHqoikFET2MpIaR0CaSLplikQwfoC09x
      Ze1XLJZ2F59Im+OEpIkkQCg6ea99Sei+xEtEzX7mShdZLF2l1GgIENFSDEePIrwqxWo9IzRi
      DRJIHy+oEjEH6AlNIFCoeussl6epujk01SJpTxAzB78WkZ2HobsFaoEQypYGWoqUDESOMFe4
      0LTNSdr7CJAU3WWsiIlwXG7MrDOoV8j7Bn39cXRVAwSaYv+65goAAAUYSURBVJAJPUsmdBDH
      L+NLF1XozOXPk6s9OG11/CLzhQv4QY38pqJ7p1yl4gKugxm2mL0yR3JyiGTMwJUOgz0/wPWK
      mHqcL5b/q82WTDRqiyWjkROMRk5SdpdZyn+GH9QQXoXa5jpjKRmMn9702dT377aeYDjW/PNv
      Gl0D2ANCCHrDz6IqJkvluqi1KnSS9iR94SnWa3MslC6B3cO5n55CC5mYqqTsgPActJBNxOjd
      1IhWYGr1VbNQW9zQDd5Otjy9Ja3g+oXrXLpVRF1bYb2sMvpchtBIXXBPEmDrSXTVRsqgkXrc
      7OzaWpzl4uf1kKUapj92nOXC5xtiIPnqLLaeQgkchFAbkkutJ/c3ddJvpmsAe0QIhVRokqS9
      D1/WNXPv7217rFFixiB5Z57UwIOVo3FejEBlNHq65bhld6Wt8xxIF1VoG10nEpkEk1qIoBjG
      sE1W12qE7UbBjjC5vfa/9eZRUmJoEWwtQdXLN8YXxM0hNLSNMG/NW2dh/QJy2+GdpfcwGD/T
      UNXcvb/mN5muD9AhHL/E1dVfkXe2VlMpaAxFnsfWMjiBg6EYxMwkhmoihCBbusrdfPv8npg1
      xkxxZx0xgITWh7bNwdYUm9HECw11FRtTjXJ79d0tKR+qMIiY/eQbSjCK0BhOvIBtPJn8/MdN
      dwXoEIYa5nD6x6xVZ1ivzVFy17mxOs18YY7/KX+y5cDKUE2GY5Mc7j3DgdShll2p69dFGYud
      oeStstImqgMQ0/vQZLPz6QV1kYneyANF97DRt8UAbCNFJnqUkJHG9UuEjcwW/a9vO90VoMPU
      I0af8OaNf9uxp/59knYfpwZOENa9LQX5qjAZT5wlZg7hS4cvVt8iW9nasFag0B+eImNNMrv+
      25bjp8MHGYyd3PR8HiulaUpOFkuL0xs5tCF3+jTSNYAOEsiAt2+8wUezbz1URwhFKJwZOsuh
      9EHcoIKpxUjb+7G0xIajGUif5cpNcrVZvKCGpcVI2xNE9Qw1b51rK2+1VMYZSXyXHrt1354u
      XQPoGFJK3rr573x4980vPcYrE69zduQc8HARFiklC4XfsVyaZnOKQsToZ6znxR2Fop92uj5A
      h5he/YyP7r79SGO8c+s/GYlNMpY48FC/J4SgP3oMS4uTq8wg8YkY/aTCz3Qn/y50V4AO4AUe
      /3r+n3YVdt4Lg9Fxfn7yH79xJ6rfVLqfcge4tvJpRyY/wHzhNrc61KK8y+50DaADXMp+eUWY
      Vlzu8Hhd2tM1gEfED3wWCrc7OuZc/uaunSa6dIauATwivvTI11r38rnP6kwO1/Xx/YAgkPiu
      v2OX5qKTx32IfjxdvjzdKNAjI9v2FLrPwhdZrv7fLFY0RNiG2Uv3GH3xIPuPNBe+Q92ouivA
      46FrAI+IQMFQTapeue016bE4tiMxAo+KKxg5OkAibbW93lAtVKX7p3kcdD/lR0RTNJJWH/PF
      222vyTzb91BjJqwUWjd+/1jo+gCPiBAKY4mdSyYflomeQx0dr0t7ugbQAY73v9ixuldVqBzL
      bNdD7/JV0TWADtAfGWEqfaIjYx3vf5GE1b5gvUtn6RpAh3h18qdEjeaGVg9D0urj5X2vdeiJ
      uuyFrgF0iISV4vVDf4+hto/u7ISlhfiLQ39HxHgyWllPK10D6CBjiQP89dF/IG62ju+3I2X3
      87fHfsFgdPyrebAubelmg34FFJ08H8z8N+fn39tR1tRULc4M/RHfG/ljQnr3M3wS/D9azGj6
      DaynoAAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
