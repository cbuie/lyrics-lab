<?xml version='1.0' encoding='utf-8' ?>

<!-- build 9100.15.1106.2334                                -->
<workbook source-platform='win' version='9.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='noun_decade_comp_synonyms' inline='true' name='textscan.42343.920907511572' version='9.1'>
      <connection class='textscan' directory='C:/Users/mjohns/Documents/GitHub/lyrics-lab/viz/data' filename='noun_decade_comp_hypernyms.csv' password='' server='' username=''>
        <relation name='noun_decade_comp_hypernyms#csv' table='[noun_decade_comp_hypernyms#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='1970' ordinal='0' />
            <column datatype='integer' name='1980' ordinal='1' />
            <column datatype='integer' name='1990' ordinal='2' />
            <column datatype='integer' name='2000' ordinal='3' />
            <column datatype='integer' name='2010' ordinal='4' />
            <column datatype='string' name='word' ordinal='5' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>1970</remote-name>
            <remote-type>20</remote-type>
            <local-name>[1970]</local-name>
            <parent-name>[noun_decade_comp_hypernyms#csv]</parent-name>
            <remote-alias>1970</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1980</remote-name>
            <remote-type>20</remote-type>
            <local-name>[1980]</local-name>
            <parent-name>[noun_decade_comp_hypernyms#csv]</parent-name>
            <remote-alias>1980</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1990</remote-name>
            <remote-type>20</remote-type>
            <local-name>[1990]</local-name>
            <parent-name>[noun_decade_comp_hypernyms#csv]</parent-name>
            <remote-alias>1990</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2000</remote-name>
            <remote-type>20</remote-type>
            <local-name>[2000]</local-name>
            <parent-name>[noun_decade_comp_hypernyms#csv]</parent-name>
            <remote-alias>2000</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2010</remote-name>
            <remote-type>20</remote-type>
            <local-name>[2010]</local-name>
            <parent-name>[noun_decade_comp_hypernyms#csv]</parent-name>
            <remote-alias>2010</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>word</remote-name>
            <remote-type>129</remote-type>
            <local-name>[word]</local-name>
            <parent-name>[noun_decade_comp_hypernyms#csv]</parent-name>
            <remote-alias>word</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[noun_decade_comp_hypernyms#csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[1970]' role='measure' type='quantitative' />
      <column datatype='integer' name='[1980]' role='measure' type='quantitative' />
      <column datatype='integer' name='[1990]' role='measure' type='quantitative' />
      <column datatype='integer' name='[2000]' role='measure' type='quantitative' />
      <column datatype='integer' name='[2010]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column-instance column='[1970]' derivation='None' name='[none:1970:qk]' pivot='key' type='quantitative' />
      <column-instance column='[1980]' derivation='None' name='[none:1980:qk]' pivot='key' type='quantitative' />
      <column-instance column='[1990]' derivation='None' name='[none:1990:qk]' pivot='key' type='quantitative' />
      <column-instance column='[2000]' derivation='None' name='[none:2000:qk]' pivot='key' type='quantitative' />
      <column-instance column='[2010]' derivation='None' name='[none:2010:qk]' pivot='key' type='quantitative' />
      <column-instance column='[1970]' derivation='Sum' name='[sum:1970:qk]' pivot='key' type='quantitative' />
      <column-instance column='[1980]' derivation='Sum' name='[sum:1980:qk]' pivot='key' type='quantitative' />
      <column-instance column='[1990]' derivation='Sum' name='[sum:1990:qk]' pivot='key' type='quantitative' />
      <column-instance column='[2000]' derivation='Sum' name='[sum:2000:qk]' pivot='key' type='quantitative' />
      <column-instance column='[2010]' derivation='Sum' name='[sum:2010:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;[textscan.42343.920907511572].[none:1970:qk]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[textscan.42343.920907511572].[sum:1970:qk]&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;[textscan.42343.920907511572].[none:1990:qk]&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;[textscan.42343.920907511572].[sum:1990:qk]&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;[textscan.42343.920907511572].[none:2010:qk]&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;[textscan.42343.920907511572].[sum:2010:qk]&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;[textscan.42343.920907511572].[none:2000:qk]&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;[textscan.42343.920907511572].[sum:2000:qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[textscan.42343.920907511572].[none:1980:qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[textscan.42343.920907511572].[sum:1980:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='noun_decade_comp_hypernyms' inline='true' name='textscan.42346.034320046296' version='9.1'>
      <connection class='textscan' directory='C:/Users/mjohns/Documents/GitHub/lyrics-lab/viz/data' filename='noun_decade_comp_hypernyms.csv' password='' server='' username=''>
        <relation name='noun_decade_comp_hypernyms#csv' table='[noun_decade_comp_hypernyms#csv]' type='table'>
          <columns character-set='UTF-8' header='no' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='integer' name='F2' ordinal='1' />
            <column datatype='integer' name='F3' ordinal='2' />
            <column datatype='integer' name='F4' ordinal='3' />
            <column datatype='integer' name='F5' ordinal='4' />
            <column datatype='string' name='F6' ordinal='5' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[noun_decade_comp_hypernyms#csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F2</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F2]</local-name>
            <parent-name>[noun_decade_comp_hypernyms#csv]</parent-name>
            <remote-alias>F2</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F3</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F3]</local-name>
            <parent-name>[noun_decade_comp_hypernyms#csv]</parent-name>
            <remote-alias>F3</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F4</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F4]</local-name>
            <parent-name>[noun_decade_comp_hypernyms#csv]</parent-name>
            <remote-alias>F4</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F5</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F5]</local-name>
            <parent-name>[noun_decade_comp_hypernyms#csv]</parent-name>
            <remote-alias>F5</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F6</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F6]</local-name>
            <parent-name>[noun_decade_comp_hypernyms#csv]</parent-name>
            <remote-alias>F6</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[noun_decade_comp_hypernyms#csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;false&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Any Shared'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Noun Shared Hypernyms (Decade Spanning)</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run>Noun words with shared hypernyms, i.e. 2 or more, including those spanning decades.</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='noun_decade_comp_synonyms' name='textscan.42343.920907511572' />
          </datasources>
          <datasource-dependencies datasource='textscan.42343.920907511572'>
            <column datatype='integer' name='[1970]' role='measure' type='quantitative' />
            <column datatype='integer' name='[1980]' role='measure' type='quantitative' />
            <column datatype='integer' name='[1990]' role='measure' type='quantitative' />
            <column datatype='integer' name='[2000]' role='measure' type='quantitative' />
            <column datatype='integer' name='[2010]' role='measure' type='quantitative' />
            <column-instance column='[1970]' derivation='None' name='[none:1970:qk]' pivot='key' type='quantitative' />
            <column-instance column='[1980]' derivation='None' name='[none:1980:qk]' pivot='key' type='quantitative' />
            <column-instance column='[1990]' derivation='None' name='[none:1990:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2000]' derivation='None' name='[none:2000:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2010]' derivation='None' name='[none:2010:qk]' pivot='key' type='quantitative' />
            <column-instance column='[word]' derivation='None' name='[none:word:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[word]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.42343.920907511572].[none:word:nk]'>
            <groupfilter expression='(&#13;&#10;SUM([1970]) +&#13;&#10;SUM([1980]) +&#13;&#10;SUM([1990]) +&#13;&#10;SUM([2000]) + &#13;&#10;SUM([2010])&#13;&#10;) &gt; 1' function='filter' user:ui-marker='filter-by'>
              <groupfilter function='level-members' level='[none:word:nk]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
            </groupfilter>
          </filter>
          <slices>
            <column>[textscan.42343.920907511572].[none:word:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' x-axis-name='[textscan.42343.920907511572].[none:1970:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.3183425664901733' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' x-axis-name='[textscan.42343.920907511572].[none:1980:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.3183425664901733' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' x-axis-name='[textscan.42343.920907511572].[none:1990:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.3183425664901733' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' x-axis-name='[textscan.42343.920907511572].[none:2000:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.3183425664901733' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' x-axis-name='[textscan.42343.920907511572].[none:2010:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.3183425664901733' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.42343.920907511572].[none:word:nk]</rows>
        <cols>([textscan.42343.920907511572].[none:1970:qk] + ([textscan.42343.920907511572].[none:1980:qk] + ([textscan.42343.920907511572].[none:1990:qk] + ([textscan.42343.920907511572].[none:2000:qk] + [textscan.42343.920907511572].[none:2010:qk]))))</cols>
      </table>
    </worksheet>
    <worksheet name='Any Shared 3+'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Noun Shared 3+ Hypernyms (Decade Spanning)</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run>Noun words with shared hypernyms -- 3 or more times --  including those spanning decades.</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='noun_decade_comp_synonyms' name='textscan.42343.920907511572' />
          </datasources>
          <datasource-dependencies datasource='textscan.42343.920907511572'>
            <column datatype='integer' name='[1970]' role='measure' type='quantitative' />
            <column datatype='integer' name='[1980]' role='measure' type='quantitative' />
            <column datatype='integer' name='[1990]' role='measure' type='quantitative' />
            <column datatype='integer' name='[2000]' role='measure' type='quantitative' />
            <column datatype='integer' name='[2010]' role='measure' type='quantitative' />
            <column-instance column='[1970]' derivation='None' name='[none:1970:qk]' pivot='key' type='quantitative' />
            <column-instance column='[1980]' derivation='None' name='[none:1980:qk]' pivot='key' type='quantitative' />
            <column-instance column='[1990]' derivation='None' name='[none:1990:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2000]' derivation='None' name='[none:2000:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2010]' derivation='None' name='[none:2010:qk]' pivot='key' type='quantitative' />
            <column-instance column='[word]' derivation='None' name='[none:word:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[word]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.42343.920907511572].[none:word:nk]'>
            <groupfilter expression='SUM([1970]) +&#13;&#10;SUM([1980]) +&#13;&#10;SUM([1990]) +&#13;&#10;SUM([2000]) +&#13;&#10;SUM([2010]) &gt; 2' function='filter' user:ui-marker='filter-by'>
              <groupfilter function='level-members' level='[none:word:nk]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
            </groupfilter>
          </filter>
          <slices>
            <column>[textscan.42343.920907511572].[none:word:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' x-axis-name='[textscan.42343.920907511572].[none:1970:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.3183425664901733' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' x-axis-name='[textscan.42343.920907511572].[none:1980:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.3183425664901733' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' x-axis-name='[textscan.42343.920907511572].[none:1990:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.3183425664901733' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' x-axis-name='[textscan.42343.920907511572].[none:2000:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.3183425664901733' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' x-axis-name='[textscan.42343.920907511572].[none:2010:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.3183425664901733' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.42343.920907511572].[none:word:nk]</rows>
        <cols>([textscan.42343.920907511572].[none:1970:qk] + ([textscan.42343.920907511572].[none:1980:qk] + ([textscan.42343.920907511572].[none:1990:qk] + ([textscan.42343.920907511572].[none:2000:qk] + [textscan.42343.920907511572].[none:2010:qk]))))</cols>
      </table>
    </worksheet>
    <worksheet name='Any Shared 4+'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Noun Shared 4+ Hypernyms (Decade Spanning)</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run>Noun words with shared hypernyms -- 4 or more times --  including those spanning decades.</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='noun_decade_comp_synonyms' name='textscan.42343.920907511572' />
          </datasources>
          <datasource-dependencies datasource='textscan.42343.920907511572'>
            <column datatype='integer' name='[1970]' role='measure' type='quantitative' />
            <column datatype='integer' name='[1980]' role='measure' type='quantitative' />
            <column datatype='integer' name='[1990]' role='measure' type='quantitative' />
            <column datatype='integer' name='[2000]' role='measure' type='quantitative' />
            <column datatype='integer' name='[2010]' role='measure' type='quantitative' />
            <column-instance column='[1970]' derivation='None' name='[none:1970:qk]' pivot='key' type='quantitative' />
            <column-instance column='[1980]' derivation='None' name='[none:1980:qk]' pivot='key' type='quantitative' />
            <column-instance column='[1990]' derivation='None' name='[none:1990:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2000]' derivation='None' name='[none:2000:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2010]' derivation='None' name='[none:2010:qk]' pivot='key' type='quantitative' />
            <column-instance column='[word]' derivation='None' name='[none:word:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[word]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.42343.920907511572].[none:word:nk]'>
            <groupfilter expression='SUM([1970]) +&#13;&#10;SUM([1980]) +&#13;&#10;SUM([1990]) +&#13;&#10;SUM([2000]) +&#13;&#10;SUM([2010]) &gt; 3' function='filter' user:ui-marker='filter-by'>
              <groupfilter function='level-members' level='[none:word:nk]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
            </groupfilter>
          </filter>
          <slices>
            <column>[textscan.42343.920907511572].[none:word:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' x-axis-name='[textscan.42343.920907511572].[none:1970:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.3183425664901733' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' x-axis-name='[textscan.42343.920907511572].[none:1980:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.3183425664901733' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' x-axis-name='[textscan.42343.920907511572].[none:1990:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.3183425664901733' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' x-axis-name='[textscan.42343.920907511572].[none:2000:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.3183425664901733' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' x-axis-name='[textscan.42343.920907511572].[none:2010:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.3183425664901733' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.42343.920907511572].[none:word:nk]</rows>
        <cols>([textscan.42343.920907511572].[none:1970:qk] + ([textscan.42343.920907511572].[none:1980:qk] + ([textscan.42343.920907511572].[none:1990:qk] + ([textscan.42343.920907511572].[none:2000:qk] + [textscan.42343.920907511572].[none:2010:qk]))))</cols>
      </table>
    </worksheet>
    <worksheet name='Any Shared 5+'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Noun Shared 5+ Hypernyms (Decade Spanning)</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run>Noun words with shared hypernyms -- 5 or more times --  including those spanning decades.</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='noun_decade_comp_synonyms' name='textscan.42343.920907511572' />
          </datasources>
          <datasource-dependencies datasource='textscan.42343.920907511572'>
            <column datatype='integer' name='[1970]' role='measure' type='quantitative' />
            <column datatype='integer' name='[1980]' role='measure' type='quantitative' />
            <column datatype='integer' name='[1990]' role='measure' type='quantitative' />
            <column datatype='integer' name='[2000]' role='measure' type='quantitative' />
            <column datatype='integer' name='[2010]' role='measure' type='quantitative' />
            <column-instance column='[1970]' derivation='None' name='[none:1970:qk]' pivot='key' type='quantitative' />
            <column-instance column='[1980]' derivation='None' name='[none:1980:qk]' pivot='key' type='quantitative' />
            <column-instance column='[1990]' derivation='None' name='[none:1990:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2000]' derivation='None' name='[none:2000:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2010]' derivation='None' name='[none:2010:qk]' pivot='key' type='quantitative' />
            <column-instance column='[word]' derivation='None' name='[none:word:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[word]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.42343.920907511572].[none:word:nk]'>
            <groupfilter expression='SUM([1970]) +&#13;&#10;SUM([1980]) +&#13;&#10;SUM([1990]) +&#13;&#10;SUM([2000]) +&#13;&#10;SUM([2010]) &gt; 4' function='filter' user:ui-marker='filter-by'>
              <groupfilter function='level-members' level='[none:word:nk]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
            </groupfilter>
          </filter>
          <slices>
            <column>[textscan.42343.920907511572].[none:word:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' x-axis-name='[textscan.42343.920907511572].[none:1970:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.3183425664901733' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' x-axis-name='[textscan.42343.920907511572].[none:1980:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.3183425664901733' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' x-axis-name='[textscan.42343.920907511572].[none:1990:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.3183425664901733' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' x-axis-name='[textscan.42343.920907511572].[none:2000:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.3183425664901733' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' x-axis-name='[textscan.42343.920907511572].[none:2010:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.3183425664901733' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.42343.920907511572].[none:word:nk]</rows>
        <cols>([textscan.42343.920907511572].[none:1970:qk] + ([textscan.42343.920907511572].[none:1980:qk] + ([textscan.42343.920907511572].[none:1990:qk] + ([textscan.42343.920907511572].[none:2000:qk] + [textscan.42343.920907511572].[none:2010:qk]))))</cols>
      </table>
    </worksheet>
    <worksheet name='Decade Shared'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Noun Shared Hypernyms (by Decade) </run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run>Noun words with shared hypernyms, i.e. 2 or more within any decade.</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='noun_decade_comp_synonyms' name='textscan.42343.920907511572' />
          </datasources>
          <datasource-dependencies datasource='textscan.42343.920907511572'>
            <column datatype='integer' name='[1970]' role='measure' type='quantitative' />
            <column datatype='integer' name='[1980]' role='measure' type='quantitative' />
            <column datatype='integer' name='[1990]' role='measure' type='quantitative' />
            <column datatype='integer' name='[2000]' role='measure' type='quantitative' />
            <column datatype='integer' name='[2010]' role='measure' type='quantitative' />
            <column-instance column='[1970]' derivation='None' name='[none:1970:qk]' pivot='key' type='quantitative' />
            <column-instance column='[1980]' derivation='None' name='[none:1980:qk]' pivot='key' type='quantitative' />
            <column-instance column='[1990]' derivation='None' name='[none:1990:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2000]' derivation='None' name='[none:2000:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2010]' derivation='None' name='[none:2010:qk]' pivot='key' type='quantitative' />
            <column-instance column='[word]' derivation='None' name='[none:word:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[word]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.42343.920907511572].[none:word:nk]'>
            <groupfilter expression='SUM([1970]) &gt; 1 OR&#13;&#10;SUM([1980]) &gt; 1 OR&#13;&#10;SUM([1990]) &gt; 1 OR&#13;&#10;SUM([2000]) &gt; 1 OR&#13;&#10;SUM([2010]) &gt; 1' function='filter' user:ui-marker='filter-by'>
              <groupfilter function='level-members' level='[none:word:nk]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
            </groupfilter>
          </filter>
          <slices>
            <column>[textscan.42343.920907511572].[none:word:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' x-axis-name='[textscan.42343.920907511572].[none:1970:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.3183425664901733' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' x-axis-name='[textscan.42343.920907511572].[none:1980:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.3183425664901733' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' x-axis-name='[textscan.42343.920907511572].[none:1990:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.3183425664901733' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' x-axis-name='[textscan.42343.920907511572].[none:2000:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.3183425664901733' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' x-axis-name='[textscan.42343.920907511572].[none:2010:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.3183425664901733' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.42343.920907511572].[none:word:nk]</rows>
        <cols>([textscan.42343.920907511572].[none:1970:qk] + ([textscan.42343.920907511572].[none:1980:qk] + ([textscan.42343.920907511572].[none:1990:qk] + ([textscan.42343.920907511572].[none:2000:qk] + [textscan.42343.920907511572].[none:2010:qk]))))</cols>
      </table>
    </worksheet>
    <worksheet name='In Each Decade'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Noun Shared Hypernyms (In Each Decade)</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run>Noun words with shared hypernyms spanning across each decade.</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='noun_decade_comp_synonyms' name='textscan.42343.920907511572' />
          </datasources>
          <datasource-dependencies datasource='textscan.42343.920907511572'>
            <column datatype='integer' name='[1970]' role='measure' type='quantitative' />
            <column datatype='integer' name='[1980]' role='measure' type='quantitative' />
            <column datatype='integer' name='[1990]' role='measure' type='quantitative' />
            <column datatype='integer' name='[2000]' role='measure' type='quantitative' />
            <column datatype='integer' name='[2010]' role='measure' type='quantitative' />
            <column-instance column='[1970]' derivation='None' name='[none:1970:qk]' pivot='key' type='quantitative' />
            <column-instance column='[1980]' derivation='None' name='[none:1980:qk]' pivot='key' type='quantitative' />
            <column-instance column='[1990]' derivation='None' name='[none:1990:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2000]' derivation='None' name='[none:2000:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2010]' derivation='None' name='[none:2010:qk]' pivot='key' type='quantitative' />
            <column-instance column='[word]' derivation='None' name='[none:word:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[word]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.42343.920907511572].[none:word:nk]'>
            <groupfilter expression='SUM([1970]) &gt; 1 AND &#13;&#10;SUM([1980]) &gt; 1 AND&#13;&#10;SUM([1990]) &gt; 1 AND&#13;&#10;SUM([2000]) &gt; 1 AND&#13;&#10;SUM([2010]) &gt; 1' function='filter' user:ui-marker='filter-by'>
              <groupfilter function='level-members' level='[none:word:nk]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
            </groupfilter>
          </filter>
          <slices>
            <column>[textscan.42343.920907511572].[none:word:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' x-axis-name='[textscan.42343.920907511572].[none:1970:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.3183425664901733' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' x-axis-name='[textscan.42343.920907511572].[none:1980:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.3183425664901733' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' x-axis-name='[textscan.42343.920907511572].[none:1990:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.3183425664901733' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' x-axis-name='[textscan.42343.920907511572].[none:2000:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.3183425664901733' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' x-axis-name='[textscan.42343.920907511572].[none:2010:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.3183425664901733' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.42343.920907511572].[none:word:nk]</rows>
        <cols>([textscan.42343.920907511572].[none:1970:qk] + ([textscan.42343.920907511572].[none:1980:qk] + ([textscan.42343.920907511572].[none:1990:qk] + ([textscan.42343.920907511572].[none:2000:qk] + [textscan.42343.920907511572].[none:2010:qk]))))</cols>
      </table>
    </worksheet>
    <worksheet name='Total'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Noun Hypernym Totals (by Decade) </run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run>Total noun words with recognized hypernyms by decade, no restrictions on shared hypernyms.</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='noun_decade_comp_synonyms' name='textscan.42343.920907511572' />
          </datasources>
          <datasource-dependencies datasource='textscan.42343.920907511572'>
            <column datatype='integer' name='[1970]' role='measure' type='quantitative' />
            <column datatype='integer' name='[1980]' role='measure' type='quantitative' />
            <column datatype='integer' name='[1990]' role='measure' type='quantitative' />
            <column datatype='integer' name='[2000]' role='measure' type='quantitative' />
            <column datatype='integer' name='[2010]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[1970]' derivation='Sum' name='[sum:1970:qk]' pivot='key' type='quantitative' />
            <column-instance column='[1980]' derivation='Sum' name='[sum:1980:qk]' pivot='key' type='quantitative' />
            <column-instance column='[1990]' derivation='Sum' name='[sum:1990:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2000]' derivation='Sum' name='[sum:2000:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2010]' derivation='Sum' name='[sum:2010:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.42343.920907511572].[:Measure Names]'>
            <groupfilter function='level-members' level='[:Measure Names]' />
          </filter>
          <slices>
            <column>[textscan.42343.920907511572].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[textscan.42343.920907511572].[Multiple Values]' scope='rows' value='Synonym Count' />
            <format attr='subtitle' class='0' field='[textscan.42343.920907511572].[Multiple Values]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[textscan.42343.920907511572].[Multiple Values]' scope='rows' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane id='6'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[textscan.42343.920907511572].[Multiple Values]</rows>
        <cols>[textscan.42343.920907511572].[:Measure Names]</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows>
    <window class='schema' source-height='-1' />
    <window auto-hidden='0' class='worksheet' maximized='0' name='Total'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='56'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[textscan.42343.920907511572].[:Measure Names]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='In Each Decade'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='typeinlist' param='[textscan.42343.920907511572].[none:word:nk]' type='filter' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='56'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[textscan.42343.920907511572].[:Measure Names]</field>
          <field>[textscan.42343.920907511572].[none:word:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Decade Shared'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='typeinlist' param='[textscan.42343.920907511572].[none:word:nk]' type='filter' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='56'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[textscan.42343.920907511572].[:Measure Names]</field>
          <field>[textscan.42343.920907511572].[none:word:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Any Shared'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='typeinlist' param='[textscan.42343.920907511572].[none:word:nk]' type='filter' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='56'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[textscan.42343.920907511572].[:Measure Names]</field>
          <field>[textscan.42343.920907511572].[none:word:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Any Shared 3+'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='typeinlist' param='[textscan.42343.920907511572].[none:word:nk]' type='filter' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='56'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[textscan.42343.920907511572].[:Measure Names]</field>
          <field>[textscan.42343.920907511572].[none:word:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Any Shared 4+'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='typeinlist' param='[textscan.42343.920907511572].[none:word:nk]' type='filter' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='56'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[textscan.42343.920907511572].[:Measure Names]</field>
          <field>[textscan.42343.920907511572].[none:word:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='1' name='Any Shared 5+'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='typeinlist' param='[textscan.42343.920907511572].[none:word:nk]' type='filter' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='56'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[textscan.42343.920907511572].[:Measure Names]</field>
          <field>[textscan.42343.920907511572].[none:word:nk]</field>
        </color-one-way>
      </highlight>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Total' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='In Each Decade' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Decade Shared' width='192'>
      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
      pgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Any Shared' width='192'>
      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
      pgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Any Shared 3+' width='192'>
      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
      z3R8wTD/H+J9M73ky8WrAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Any Shared 4+' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Any Shared 5+' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
